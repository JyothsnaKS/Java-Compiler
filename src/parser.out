Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    import
    private
    Scanner
    CHAR
    nextInt
    next
    STRING
    protected
    final
    then
    new
    nextDouble
    println
    nextFloat

Grammar

Rule 0     S' -> class_declaration
Rule 1     class_declaration -> public class ID LBRACE field_declaration cont_field RBRACE
Rule 2     cont_field -> field_declaration cont_field
Rule 3     cont_field -> <empty>
Rule 4     field_declaration -> method_declaration
Rule 5     field_declaration -> constructor_declaration
Rule 6     field_declaration -> variable_declaration
Rule 7     field_declaration -> static statement_block
Rule 8     field_declaration -> SEMICOLON
Rule 9     constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block
Rule 10    constructor_declaration -> public ID LPAREN RPAREN statement_block
Rule 11    method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block
Rule 12    method_declaration -> public type ID LPAREN RPAREN statement_block
Rule 13    method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON
Rule 14    method_declaration -> public type ID LPAREN RPAREN SEMICOLON
Rule 15    method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block
Rule 16    statement_block -> LBRACE statement statement_cont RBRACE
Rule 17    statement_cont -> statement statement_cont
Rule 18    statement_cont -> <empty>
Rule 19    statement -> variable_declaration
Rule 20    statement -> expression SEMICOLON
Rule 21    statement -> statement_block
Rule 22    statement -> if_statement
Rule 23    statement -> for_statement
Rule 24    statement -> return expression SEMICOLON
Rule 25    statement -> return SEMICOLON
Rule 26    statement -> ID COLON statement
Rule 27    statement -> break ID SEMICOLON
Rule 28    statement -> break SEMICOLON
Rule 29    statement -> continue ID SEMICOLON
Rule 30    statement -> continue SEMICOLON
Rule 31    statement -> SEMICOLON
Rule 32    variable_declaration -> public type variable_declarator cont_var_dec
Rule 33    variable_declaration -> type variable_declarator cont_var_dec
Rule 34    cont_var_dec -> COMMA variable_declarator cont_var_dec
Rule 35    cont_var_dec -> SEMICOLON
Rule 36    variable_declarator -> ID LBRACKET RBRACKET cont_var_declarator
Rule 37    variable_declarator -> ID cont_var_declarator
Rule 38    cont_var_declarator -> EQUAL variable_initializer
Rule 39    cont_var_declarator -> <empty>
Rule 40    variable_initializer -> expression
Rule 41    expression -> numeric_expression
Rule 42    expression -> testing_expression
Rule 43    expression -> ID
Rule 44    expression -> REAL_NUMBER
Rule 45    expression -> NUMBER
Rule 46    expression -> LPAREN expression RPAREN
Rule 47    expression -> expression LPAREN exp_cont RPAREN
Rule 48    exp_cont -> arglist
Rule 49    exp_cont -> <empty>
Rule 50    numeric_expression -> MINUS expression
Rule 51    numeric_expression -> DBPLUS expression
Rule 52    numeric_expression -> DBMINUS expression
Rule 53    numeric_expression -> expression DBPLUS
Rule 54    numeric_expression -> expression DBMINUS
Rule 55    numeric_expression -> expression operator expression
Rule 56    operator -> MINUS
Rule 57    operator -> PLUS
Rule 58    operator -> DIVIDE
Rule 59    operator -> MODULO
Rule 60    operator -> TIMES
Rule 61    operator -> PLEQUAL
Rule 62    operator -> MIEQUAL
Rule 63    operator -> MTEQUAL
Rule 64    operator -> DIEQUAL
Rule 65    operator -> MOEQUAL
Rule 66    operator -> EQUAL
Rule 67    type -> type_specifier
Rule 68    type_specifier -> boolean
Rule 69    type_specifier -> byte
Rule 70    type_specifier -> void
Rule 71    type_specifier -> char
Rule 72    type_specifier -> short
Rule 73    type_specifier -> int
Rule 74    type_specifier -> float
Rule 75    type_specifier -> long
Rule 76    type_specifier -> double
Rule 77    type_specifier -> class_name
Rule 78    class_name -> ID
Rule 79    arglist -> expression cont_arglist
Rule 80    cont_arglist -> COMMA expression cont_arglist
Rule 81    cont_arglist -> <empty>
Rule 82    testing_expression -> expression GT expression
Rule 83    testing_expression -> expression LT expression
Rule 84    testing_expression -> expression GTE expression
Rule 85    testing_expression -> expression LTE expression
Rule 86    testing_expression -> expression DBEQUAL expression
Rule 87    testing_expression -> expression NEQUAL expression
Rule 88    parameter_list -> parameter cont_param
Rule 89    cont_param -> COMMA parameter cont_param
Rule 90    cont_param -> <empty>
Rule 91    parameter -> type ID
Rule 92    parameter -> type ID LBRACKET RBRACKET
Rule 93    if_statement -> if LPAREN if_part_1 RPAREN statement action1
Rule 94    if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2
Rule 95    if_part_1 -> expression
Rule 96    action1 -> <empty>
Rule 97    action2 -> <empty>
Rule 98    for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
Rule 99    for_part_1 -> variable_declaration
Rule 100   for_part_1 -> expression SEMICOLON
Rule 101   for_part_1 -> SEMICOLON
Rule 102   for_part_2 -> expression
Rule 103   for_part_2 -> <empty>
Rule 104   for_part_3 -> expression
Rule 105   for_part_3 -> <empty>

Terminals, with rules where they appear

CHAR                 : 
COLON                : 26
COMMA                : 34 80 89
DBEQUAL              : 86
DBMINUS              : 52 54
DBPLUS               : 51 53
DIEQUAL              : 64
DIVIDE               : 58
EQUAL                : 38 66
GT                   : 82
GTE                  : 84
ID                   : 1 9 10 11 12 13 14 15 26 27 29 36 37 43 78 91 92
LBRACE               : 1 16
LBRACKET             : 15 36 92
LPAREN               : 9 10 11 12 13 14 15 46 47 93 94 98
LT                   : 83
LTE                  : 85
MIEQUAL              : 62
MINUS                : 50 56
MODULO               : 59
MOEQUAL              : 65
MTEQUAL              : 63
NEQUAL               : 87
NUMBER               : 45
PLEQUAL              : 61
PLUS                 : 57
RBRACE               : 1 16
RBRACKET             : 15 36 92
REAL_NUMBER          : 44
RPAREN               : 9 10 11 12 13 14 15 46 47 93 94 98
SEMICOLON            : 8 13 14 20 24 25 27 28 29 30 31 35 98 100 101
STRING               : 
Scanner              : 
String               : 15
TIMES                : 60
boolean              : 68
break                : 27 28
byte                 : 69
char                 : 71
class                : 1
continue             : 29 30
double               : 76
else                 : 94
error                : 
final                : 
float                : 74
for                  : 98
if                   : 93 94
import               : 
int                  : 73
long                 : 75
main                 : 15
new                  : 
next                 : 
nextDouble           : 
nextFloat            : 
nextInt              : 
println              : 
private              : 
protected            : 
public               : 1 9 10 11 12 13 14 15 32
return               : 24 25
short                : 72
static               : 7 15
then                 : 
void                 : 15 70

Nonterminals, with rules where they appear

action1              : 93 94
action2              : 94
arglist              : 48
class_declaration    : 0
class_name           : 77
constructor_declaration : 5
cont_arglist         : 79 80
cont_field           : 1 2
cont_param           : 88 89
cont_var_dec         : 32 33 34
cont_var_declarator  : 36 37
exp_cont             : 47
expression           : 20 24 40 46 47 50 51 52 53 54 55 55 79 80 82 82 83 83 84 84 85 85 86 86 87 87 95 100 102 104
field_declaration    : 1 2
for_part_1           : 98
for_part_2           : 98
for_part_3           : 98
for_statement        : 23
if_part_1            : 93 94
if_statement         : 22
method_declaration   : 4
numeric_expression   : 41
operator             : 55
parameter            : 88 89
parameter_list       : 9 11 13
statement            : 16 17 26 93 94 94 98
statement_block      : 7 9 10 11 12 15 21
statement_cont       : 16 17
testing_expression   : 42
type                 : 11 12 13 14 32 33 91 92
type_specifier       : 67
variable_declaration : 6 19 99
variable_declarator  : 32 33 34
variable_initializer : 38

Parsing method: LALR

state 0

    (0) S' -> . class_declaration
    (1) class_declaration -> . public class ID LBRACE field_declaration cont_field RBRACE

    public          shift and go to state 1

    class_declaration              shift and go to state 2

state 1

    (1) class_declaration -> public . class ID LBRACE field_declaration cont_field RBRACE

    class           shift and go to state 3


state 2

    (0) S' -> class_declaration .



state 3

    (1) class_declaration -> public class . ID LBRACE field_declaration cont_field RBRACE

    ID              shift and go to state 4


state 4

    (1) class_declaration -> public class ID . LBRACE field_declaration cont_field RBRACE

    LBRACE          shift and go to state 5


state 5

    (1) class_declaration -> public class ID LBRACE . field_declaration cont_field RBRACE
    (4) field_declaration -> . method_declaration
    (5) field_declaration -> . constructor_declaration
    (6) field_declaration -> . variable_declaration
    (7) field_declaration -> . static statement_block
    (8) field_declaration -> . SEMICOLON
    (11) method_declaration -> . public type ID LPAREN parameter_list RPAREN statement_block
    (12) method_declaration -> . public type ID LPAREN RPAREN statement_block
    (13) method_declaration -> . public type ID LPAREN parameter_list RPAREN SEMICOLON
    (14) method_declaration -> . public type ID LPAREN RPAREN SEMICOLON
    (15) method_declaration -> . public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block
    (9) constructor_declaration -> . public ID LPAREN parameter_list RPAREN statement_block
    (10) constructor_declaration -> . public ID LPAREN RPAREN statement_block
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    static          shift and go to state 9
    SEMICOLON       shift and go to state 12
    public          shift and go to state 17
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24
    ID              shift and go to state 21

    type_specifier                 shift and go to state 11
    class_name                     shift and go to state 18
    constructor_declaration        shift and go to state 13
    method_declaration             shift and go to state 14
    field_declaration              shift and go to state 25
    type                           shift and go to state 16
    variable_declaration           shift and go to state 10

state 6

    (73) type_specifier -> int .

    ID              reduce using rule 73 (type_specifier -> int .)


state 7

    (74) type_specifier -> float .

    ID              reduce using rule 74 (type_specifier -> float .)


state 8

    (68) type_specifier -> boolean .

    ID              reduce using rule 68 (type_specifier -> boolean .)


state 9

    (7) field_declaration -> static . statement_block
    (16) statement_block -> . LBRACE statement statement_cont RBRACE

    LBRACE          shift and go to state 26

    statement_block                shift and go to state 27

state 10

    (6) field_declaration -> variable_declaration .

    static          reduce using rule 6 (field_declaration -> variable_declaration .)
    SEMICOLON       reduce using rule 6 (field_declaration -> variable_declaration .)
    public          reduce using rule 6 (field_declaration -> variable_declaration .)
    boolean         reduce using rule 6 (field_declaration -> variable_declaration .)
    byte            reduce using rule 6 (field_declaration -> variable_declaration .)
    void            reduce using rule 6 (field_declaration -> variable_declaration .)
    char            reduce using rule 6 (field_declaration -> variable_declaration .)
    short           reduce using rule 6 (field_declaration -> variable_declaration .)
    int             reduce using rule 6 (field_declaration -> variable_declaration .)
    float           reduce using rule 6 (field_declaration -> variable_declaration .)
    long            reduce using rule 6 (field_declaration -> variable_declaration .)
    double          reduce using rule 6 (field_declaration -> variable_declaration .)
    ID              reduce using rule 6 (field_declaration -> variable_declaration .)
    RBRACE          reduce using rule 6 (field_declaration -> variable_declaration .)


state 11

    (67) type -> type_specifier .

    ID              reduce using rule 67 (type -> type_specifier .)


state 12

    (8) field_declaration -> SEMICOLON .

    static          reduce using rule 8 (field_declaration -> SEMICOLON .)
    SEMICOLON       reduce using rule 8 (field_declaration -> SEMICOLON .)
    public          reduce using rule 8 (field_declaration -> SEMICOLON .)
    boolean         reduce using rule 8 (field_declaration -> SEMICOLON .)
    byte            reduce using rule 8 (field_declaration -> SEMICOLON .)
    void            reduce using rule 8 (field_declaration -> SEMICOLON .)
    char            reduce using rule 8 (field_declaration -> SEMICOLON .)
    short           reduce using rule 8 (field_declaration -> SEMICOLON .)
    int             reduce using rule 8 (field_declaration -> SEMICOLON .)
    float           reduce using rule 8 (field_declaration -> SEMICOLON .)
    long            reduce using rule 8 (field_declaration -> SEMICOLON .)
    double          reduce using rule 8 (field_declaration -> SEMICOLON .)
    ID              reduce using rule 8 (field_declaration -> SEMICOLON .)
    RBRACE          reduce using rule 8 (field_declaration -> SEMICOLON .)


state 13

    (5) field_declaration -> constructor_declaration .

    static          reduce using rule 5 (field_declaration -> constructor_declaration .)
    SEMICOLON       reduce using rule 5 (field_declaration -> constructor_declaration .)
    public          reduce using rule 5 (field_declaration -> constructor_declaration .)
    boolean         reduce using rule 5 (field_declaration -> constructor_declaration .)
    byte            reduce using rule 5 (field_declaration -> constructor_declaration .)
    void            reduce using rule 5 (field_declaration -> constructor_declaration .)
    char            reduce using rule 5 (field_declaration -> constructor_declaration .)
    short           reduce using rule 5 (field_declaration -> constructor_declaration .)
    int             reduce using rule 5 (field_declaration -> constructor_declaration .)
    float           reduce using rule 5 (field_declaration -> constructor_declaration .)
    long            reduce using rule 5 (field_declaration -> constructor_declaration .)
    double          reduce using rule 5 (field_declaration -> constructor_declaration .)
    ID              reduce using rule 5 (field_declaration -> constructor_declaration .)
    RBRACE          reduce using rule 5 (field_declaration -> constructor_declaration .)


state 14

    (4) field_declaration -> method_declaration .

    static          reduce using rule 4 (field_declaration -> method_declaration .)
    SEMICOLON       reduce using rule 4 (field_declaration -> method_declaration .)
    public          reduce using rule 4 (field_declaration -> method_declaration .)
    boolean         reduce using rule 4 (field_declaration -> method_declaration .)
    byte            reduce using rule 4 (field_declaration -> method_declaration .)
    void            reduce using rule 4 (field_declaration -> method_declaration .)
    char            reduce using rule 4 (field_declaration -> method_declaration .)
    short           reduce using rule 4 (field_declaration -> method_declaration .)
    int             reduce using rule 4 (field_declaration -> method_declaration .)
    float           reduce using rule 4 (field_declaration -> method_declaration .)
    long            reduce using rule 4 (field_declaration -> method_declaration .)
    double          reduce using rule 4 (field_declaration -> method_declaration .)
    ID              reduce using rule 4 (field_declaration -> method_declaration .)
    RBRACE          reduce using rule 4 (field_declaration -> method_declaration .)


state 15

    (75) type_specifier -> long .

    ID              reduce using rule 75 (type_specifier -> long .)


state 16

    (33) variable_declaration -> type . variable_declarator cont_var_dec
    (36) variable_declarator -> . ID LBRACKET RBRACKET cont_var_declarator
    (37) variable_declarator -> . ID cont_var_declarator

    ID              shift and go to state 29

    variable_declarator            shift and go to state 28

state 17

    (11) method_declaration -> public . type ID LPAREN parameter_list RPAREN statement_block
    (12) method_declaration -> public . type ID LPAREN RPAREN statement_block
    (13) method_declaration -> public . type ID LPAREN parameter_list RPAREN SEMICOLON
    (14) method_declaration -> public . type ID LPAREN RPAREN SEMICOLON
    (15) method_declaration -> public . static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block
    (9) constructor_declaration -> public . ID LPAREN parameter_list RPAREN statement_block
    (10) constructor_declaration -> public . ID LPAREN RPAREN statement_block
    (32) variable_declaration -> public . type variable_declarator cont_var_dec
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    static          shift and go to state 30
    ID              shift and go to state 32
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    type_specifier                 shift and go to state 11
    class_name                     shift and go to state 18
    type                           shift and go to state 31

state 18

    (77) type_specifier -> class_name .

    ID              reduce using rule 77 (type_specifier -> class_name .)


state 19

    (70) type_specifier -> void .

    ID              reduce using rule 70 (type_specifier -> void .)


state 20

    (72) type_specifier -> short .

    ID              reduce using rule 72 (type_specifier -> short .)


state 21

    (78) class_name -> ID .

    ID              reduce using rule 78 (class_name -> ID .)


state 22

    (71) type_specifier -> char .

    ID              reduce using rule 71 (type_specifier -> char .)


state 23

    (69) type_specifier -> byte .

    ID              reduce using rule 69 (type_specifier -> byte .)


state 24

    (76) type_specifier -> double .

    ID              reduce using rule 76 (type_specifier -> double .)


state 25

    (1) class_declaration -> public class ID LBRACE field_declaration . cont_field RBRACE
    (2) cont_field -> . field_declaration cont_field
    (3) cont_field -> .
    (4) field_declaration -> . method_declaration
    (5) field_declaration -> . constructor_declaration
    (6) field_declaration -> . variable_declaration
    (7) field_declaration -> . static statement_block
    (8) field_declaration -> . SEMICOLON
    (11) method_declaration -> . public type ID LPAREN parameter_list RPAREN statement_block
    (12) method_declaration -> . public type ID LPAREN RPAREN statement_block
    (13) method_declaration -> . public type ID LPAREN parameter_list RPAREN SEMICOLON
    (14) method_declaration -> . public type ID LPAREN RPAREN SEMICOLON
    (15) method_declaration -> . public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block
    (9) constructor_declaration -> . public ID LPAREN parameter_list RPAREN statement_block
    (10) constructor_declaration -> . public ID LPAREN RPAREN statement_block
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    RBRACE          reduce using rule 3 (cont_field -> .)
    static          shift and go to state 9
    SEMICOLON       shift and go to state 12
    public          shift and go to state 17
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24
    ID              shift and go to state 21

    type_specifier                 shift and go to state 11
    class_name                     shift and go to state 18
    constructor_declaration        shift and go to state 13
    method_declaration             shift and go to state 14
    cont_field                     shift and go to state 33
    field_declaration              shift and go to state 34
    type                           shift and go to state 16
    variable_declaration           shift and go to state 10

state 26

    (16) statement_block -> LBRACE . statement statement_cont RBRACE
    (19) statement -> . variable_declaration
    (20) statement -> . expression SEMICOLON
    (21) statement -> . statement_block
    (22) statement -> . if_statement
    (23) statement -> . for_statement
    (24) statement -> . return expression SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . ID COLON statement
    (27) statement -> . break ID SEMICOLON
    (28) statement -> . break SEMICOLON
    (29) statement -> . continue ID SEMICOLON
    (30) statement -> . continue SEMICOLON
    (31) statement -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (16) statement_block -> . LBRACE statement statement_cont RBRACE
    (93) if_statement -> . if LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> . if LPAREN if_part_1 RPAREN statement action1 else statement action2
    (98) for_statement -> . for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    return          shift and go to state 50
    ID              shift and go to state 53
    break           shift and go to state 51
    continue        shift and go to state 55
    SEMICOLON       shift and go to state 42
    public          shift and go to state 47
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    LBRACE          shift and go to state 26
    if              shift and go to state 40
    for             shift and go to state 54
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    class_name                     shift and go to state 18
    statement_block                shift and go to state 37
    numeric_expression             shift and go to state 38
    variable_declaration           shift and go to state 39
    type_specifier                 shift and go to state 11
    statement                      shift and go to state 44
    if_statement                   shift and go to state 46
    type                           shift and go to state 16
    testing_expression             shift and go to state 48
    for_statement                  shift and go to state 49
    expression                     shift and go to state 56

state 27

    (7) field_declaration -> static statement_block .

    static          reduce using rule 7 (field_declaration -> static statement_block .)
    SEMICOLON       reduce using rule 7 (field_declaration -> static statement_block .)
    public          reduce using rule 7 (field_declaration -> static statement_block .)
    boolean         reduce using rule 7 (field_declaration -> static statement_block .)
    byte            reduce using rule 7 (field_declaration -> static statement_block .)
    void            reduce using rule 7 (field_declaration -> static statement_block .)
    char            reduce using rule 7 (field_declaration -> static statement_block .)
    short           reduce using rule 7 (field_declaration -> static statement_block .)
    int             reduce using rule 7 (field_declaration -> static statement_block .)
    float           reduce using rule 7 (field_declaration -> static statement_block .)
    long            reduce using rule 7 (field_declaration -> static statement_block .)
    double          reduce using rule 7 (field_declaration -> static statement_block .)
    ID              reduce using rule 7 (field_declaration -> static statement_block .)
    RBRACE          reduce using rule 7 (field_declaration -> static statement_block .)


state 28

    (33) variable_declaration -> type variable_declarator . cont_var_dec
    (34) cont_var_dec -> . COMMA variable_declarator cont_var_dec
    (35) cont_var_dec -> . SEMICOLON

    COMMA           shift and go to state 57
    SEMICOLON       shift and go to state 58

    cont_var_dec                   shift and go to state 59

state 29

    (36) variable_declarator -> ID . LBRACKET RBRACKET cont_var_declarator
    (37) variable_declarator -> ID . cont_var_declarator
    (38) cont_var_declarator -> . EQUAL variable_initializer
    (39) cont_var_declarator -> .

    LBRACKET        shift and go to state 61
    EQUAL           shift and go to state 60
    COMMA           reduce using rule 39 (cont_var_declarator -> .)
    SEMICOLON       reduce using rule 39 (cont_var_declarator -> .)

    cont_var_declarator            shift and go to state 62

state 30

    (15) method_declaration -> public static . void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block

    void            shift and go to state 63


state 31

    (11) method_declaration -> public type . ID LPAREN parameter_list RPAREN statement_block
    (12) method_declaration -> public type . ID LPAREN RPAREN statement_block
    (13) method_declaration -> public type . ID LPAREN parameter_list RPAREN SEMICOLON
    (14) method_declaration -> public type . ID LPAREN RPAREN SEMICOLON
    (32) variable_declaration -> public type . variable_declarator cont_var_dec
    (36) variable_declarator -> . ID LBRACKET RBRACKET cont_var_declarator
    (37) variable_declarator -> . ID cont_var_declarator

    ID              shift and go to state 64

    variable_declarator            shift and go to state 65

state 32

    (9) constructor_declaration -> public ID . LPAREN parameter_list RPAREN statement_block
    (10) constructor_declaration -> public ID . LPAREN RPAREN statement_block
    (78) class_name -> ID .

    LPAREN          shift and go to state 66
    ID              reduce using rule 78 (class_name -> ID .)


state 33

    (1) class_declaration -> public class ID LBRACE field_declaration cont_field . RBRACE

    RBRACE          shift and go to state 67


state 34

    (2) cont_field -> field_declaration . cont_field
    (2) cont_field -> . field_declaration cont_field
    (3) cont_field -> .
    (4) field_declaration -> . method_declaration
    (5) field_declaration -> . constructor_declaration
    (6) field_declaration -> . variable_declaration
    (7) field_declaration -> . static statement_block
    (8) field_declaration -> . SEMICOLON
    (11) method_declaration -> . public type ID LPAREN parameter_list RPAREN statement_block
    (12) method_declaration -> . public type ID LPAREN RPAREN statement_block
    (13) method_declaration -> . public type ID LPAREN parameter_list RPAREN SEMICOLON
    (14) method_declaration -> . public type ID LPAREN RPAREN SEMICOLON
    (15) method_declaration -> . public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block
    (9) constructor_declaration -> . public ID LPAREN parameter_list RPAREN statement_block
    (10) constructor_declaration -> . public ID LPAREN RPAREN statement_block
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    RBRACE          reduce using rule 3 (cont_field -> .)
    static          shift and go to state 9
    SEMICOLON       shift and go to state 12
    public          shift and go to state 17
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24
    ID              shift and go to state 21

    type_specifier                 shift and go to state 11
    class_name                     shift and go to state 18
    constructor_declaration        shift and go to state 13
    method_declaration             shift and go to state 14
    cont_field                     shift and go to state 68
    field_declaration              shift and go to state 34
    type                           shift and go to state 16
    variable_declaration           shift and go to state 10

state 35

    (51) numeric_expression -> DBPLUS . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 69
    testing_expression             shift and go to state 48

state 36

    (45) expression -> NUMBER .

    LPAREN          reduce using rule 45 (expression -> NUMBER .)
    DBPLUS          reduce using rule 45 (expression -> NUMBER .)
    DBMINUS         reduce using rule 45 (expression -> NUMBER .)
    GT              reduce using rule 45 (expression -> NUMBER .)
    LT              reduce using rule 45 (expression -> NUMBER .)
    GTE             reduce using rule 45 (expression -> NUMBER .)
    LTE             reduce using rule 45 (expression -> NUMBER .)
    DBEQUAL         reduce using rule 45 (expression -> NUMBER .)
    NEQUAL          reduce using rule 45 (expression -> NUMBER .)
    MINUS           reduce using rule 45 (expression -> NUMBER .)
    PLUS            reduce using rule 45 (expression -> NUMBER .)
    DIVIDE          reduce using rule 45 (expression -> NUMBER .)
    MODULO          reduce using rule 45 (expression -> NUMBER .)
    TIMES           reduce using rule 45 (expression -> NUMBER .)
    PLEQUAL         reduce using rule 45 (expression -> NUMBER .)
    MIEQUAL         reduce using rule 45 (expression -> NUMBER .)
    MTEQUAL         reduce using rule 45 (expression -> NUMBER .)
    DIEQUAL         reduce using rule 45 (expression -> NUMBER .)
    MOEQUAL         reduce using rule 45 (expression -> NUMBER .)
    EQUAL           reduce using rule 45 (expression -> NUMBER .)
    RPAREN          reduce using rule 45 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 45 (expression -> NUMBER .)
    COMMA           reduce using rule 45 (expression -> NUMBER .)


state 37

    (21) statement -> statement_block .

    return          reduce using rule 21 (statement -> statement_block .)
    ID              reduce using rule 21 (statement -> statement_block .)
    break           reduce using rule 21 (statement -> statement_block .)
    continue        reduce using rule 21 (statement -> statement_block .)
    SEMICOLON       reduce using rule 21 (statement -> statement_block .)
    public          reduce using rule 21 (statement -> statement_block .)
    REAL_NUMBER     reduce using rule 21 (statement -> statement_block .)
    NUMBER          reduce using rule 21 (statement -> statement_block .)
    LPAREN          reduce using rule 21 (statement -> statement_block .)
    LBRACE          reduce using rule 21 (statement -> statement_block .)
    if              reduce using rule 21 (statement -> statement_block .)
    for             reduce using rule 21 (statement -> statement_block .)
    MINUS           reduce using rule 21 (statement -> statement_block .)
    DBPLUS          reduce using rule 21 (statement -> statement_block .)
    DBMINUS         reduce using rule 21 (statement -> statement_block .)
    boolean         reduce using rule 21 (statement -> statement_block .)
    byte            reduce using rule 21 (statement -> statement_block .)
    void            reduce using rule 21 (statement -> statement_block .)
    char            reduce using rule 21 (statement -> statement_block .)
    short           reduce using rule 21 (statement -> statement_block .)
    int             reduce using rule 21 (statement -> statement_block .)
    float           reduce using rule 21 (statement -> statement_block .)
    long            reduce using rule 21 (statement -> statement_block .)
    double          reduce using rule 21 (statement -> statement_block .)
    RBRACE          reduce using rule 21 (statement -> statement_block .)
    else            reduce using rule 21 (statement -> statement_block .)


state 38

    (41) expression -> numeric_expression .

    LPAREN          reduce using rule 41 (expression -> numeric_expression .)
    DBPLUS          reduce using rule 41 (expression -> numeric_expression .)
    DBMINUS         reduce using rule 41 (expression -> numeric_expression .)
    GT              reduce using rule 41 (expression -> numeric_expression .)
    LT              reduce using rule 41 (expression -> numeric_expression .)
    GTE             reduce using rule 41 (expression -> numeric_expression .)
    LTE             reduce using rule 41 (expression -> numeric_expression .)
    DBEQUAL         reduce using rule 41 (expression -> numeric_expression .)
    NEQUAL          reduce using rule 41 (expression -> numeric_expression .)
    MINUS           reduce using rule 41 (expression -> numeric_expression .)
    PLUS            reduce using rule 41 (expression -> numeric_expression .)
    DIVIDE          reduce using rule 41 (expression -> numeric_expression .)
    MODULO          reduce using rule 41 (expression -> numeric_expression .)
    TIMES           reduce using rule 41 (expression -> numeric_expression .)
    PLEQUAL         reduce using rule 41 (expression -> numeric_expression .)
    MIEQUAL         reduce using rule 41 (expression -> numeric_expression .)
    MTEQUAL         reduce using rule 41 (expression -> numeric_expression .)
    DIEQUAL         reduce using rule 41 (expression -> numeric_expression .)
    MOEQUAL         reduce using rule 41 (expression -> numeric_expression .)
    EQUAL           reduce using rule 41 (expression -> numeric_expression .)
    RPAREN          reduce using rule 41 (expression -> numeric_expression .)
    SEMICOLON       reduce using rule 41 (expression -> numeric_expression .)
    COMMA           reduce using rule 41 (expression -> numeric_expression .)


state 39

    (19) statement -> variable_declaration .

    return          reduce using rule 19 (statement -> variable_declaration .)
    ID              reduce using rule 19 (statement -> variable_declaration .)
    break           reduce using rule 19 (statement -> variable_declaration .)
    continue        reduce using rule 19 (statement -> variable_declaration .)
    SEMICOLON       reduce using rule 19 (statement -> variable_declaration .)
    public          reduce using rule 19 (statement -> variable_declaration .)
    REAL_NUMBER     reduce using rule 19 (statement -> variable_declaration .)
    NUMBER          reduce using rule 19 (statement -> variable_declaration .)
    LPAREN          reduce using rule 19 (statement -> variable_declaration .)
    LBRACE          reduce using rule 19 (statement -> variable_declaration .)
    if              reduce using rule 19 (statement -> variable_declaration .)
    for             reduce using rule 19 (statement -> variable_declaration .)
    MINUS           reduce using rule 19 (statement -> variable_declaration .)
    DBPLUS          reduce using rule 19 (statement -> variable_declaration .)
    DBMINUS         reduce using rule 19 (statement -> variable_declaration .)
    boolean         reduce using rule 19 (statement -> variable_declaration .)
    byte            reduce using rule 19 (statement -> variable_declaration .)
    void            reduce using rule 19 (statement -> variable_declaration .)
    char            reduce using rule 19 (statement -> variable_declaration .)
    short           reduce using rule 19 (statement -> variable_declaration .)
    int             reduce using rule 19 (statement -> variable_declaration .)
    float           reduce using rule 19 (statement -> variable_declaration .)
    long            reduce using rule 19 (statement -> variable_declaration .)
    double          reduce using rule 19 (statement -> variable_declaration .)
    RBRACE          reduce using rule 19 (statement -> variable_declaration .)
    else            reduce using rule 19 (statement -> variable_declaration .)


state 40

    (93) if_statement -> if . LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> if . LPAREN if_part_1 RPAREN statement action1 else statement action2

    LPAREN          shift and go to state 71


state 41

    (52) numeric_expression -> DBMINUS . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 72
    testing_expression             shift and go to state 48

state 42

    (31) statement -> SEMICOLON .

    return          reduce using rule 31 (statement -> SEMICOLON .)
    ID              reduce using rule 31 (statement -> SEMICOLON .)
    break           reduce using rule 31 (statement -> SEMICOLON .)
    continue        reduce using rule 31 (statement -> SEMICOLON .)
    SEMICOLON       reduce using rule 31 (statement -> SEMICOLON .)
    public          reduce using rule 31 (statement -> SEMICOLON .)
    REAL_NUMBER     reduce using rule 31 (statement -> SEMICOLON .)
    NUMBER          reduce using rule 31 (statement -> SEMICOLON .)
    LPAREN          reduce using rule 31 (statement -> SEMICOLON .)
    LBRACE          reduce using rule 31 (statement -> SEMICOLON .)
    if              reduce using rule 31 (statement -> SEMICOLON .)
    for             reduce using rule 31 (statement -> SEMICOLON .)
    MINUS           reduce using rule 31 (statement -> SEMICOLON .)
    DBPLUS          reduce using rule 31 (statement -> SEMICOLON .)
    DBMINUS         reduce using rule 31 (statement -> SEMICOLON .)
    boolean         reduce using rule 31 (statement -> SEMICOLON .)
    byte            reduce using rule 31 (statement -> SEMICOLON .)
    void            reduce using rule 31 (statement -> SEMICOLON .)
    char            reduce using rule 31 (statement -> SEMICOLON .)
    short           reduce using rule 31 (statement -> SEMICOLON .)
    int             reduce using rule 31 (statement -> SEMICOLON .)
    float           reduce using rule 31 (statement -> SEMICOLON .)
    long            reduce using rule 31 (statement -> SEMICOLON .)
    double          reduce using rule 31 (statement -> SEMICOLON .)
    RBRACE          reduce using rule 31 (statement -> SEMICOLON .)
    else            reduce using rule 31 (statement -> SEMICOLON .)


state 43

    (50) numeric_expression -> MINUS . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 73
    testing_expression             shift and go to state 48

state 44

    (16) statement_block -> LBRACE statement . statement_cont RBRACE
    (17) statement_cont -> . statement statement_cont
    (18) statement_cont -> .
    (19) statement -> . variable_declaration
    (20) statement -> . expression SEMICOLON
    (21) statement -> . statement_block
    (22) statement -> . if_statement
    (23) statement -> . for_statement
    (24) statement -> . return expression SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . ID COLON statement
    (27) statement -> . break ID SEMICOLON
    (28) statement -> . break SEMICOLON
    (29) statement -> . continue ID SEMICOLON
    (30) statement -> . continue SEMICOLON
    (31) statement -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (16) statement_block -> . LBRACE statement statement_cont RBRACE
    (93) if_statement -> . if LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> . if LPAREN if_part_1 RPAREN statement action1 else statement action2
    (98) for_statement -> . for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    RBRACE          reduce using rule 18 (statement_cont -> .)
    return          shift and go to state 50
    ID              shift and go to state 53
    break           shift and go to state 51
    continue        shift and go to state 55
    SEMICOLON       shift and go to state 42
    public          shift and go to state 47
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    LBRACE          shift and go to state 26
    if              shift and go to state 40
    for             shift and go to state 54
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    class_name                     shift and go to state 18
    statement_block                shift and go to state 37
    numeric_expression             shift and go to state 38
    variable_declaration           shift and go to state 39
    type_specifier                 shift and go to state 11
    statement                      shift and go to state 74
    if_statement                   shift and go to state 46
    type                           shift and go to state 16
    testing_expression             shift and go to state 48
    for_statement                  shift and go to state 49
    statement_cont                 shift and go to state 75
    expression                     shift and go to state 56

state 45

    (44) expression -> REAL_NUMBER .

    LPAREN          reduce using rule 44 (expression -> REAL_NUMBER .)
    DBPLUS          reduce using rule 44 (expression -> REAL_NUMBER .)
    DBMINUS         reduce using rule 44 (expression -> REAL_NUMBER .)
    GT              reduce using rule 44 (expression -> REAL_NUMBER .)
    LT              reduce using rule 44 (expression -> REAL_NUMBER .)
    GTE             reduce using rule 44 (expression -> REAL_NUMBER .)
    LTE             reduce using rule 44 (expression -> REAL_NUMBER .)
    DBEQUAL         reduce using rule 44 (expression -> REAL_NUMBER .)
    NEQUAL          reduce using rule 44 (expression -> REAL_NUMBER .)
    MINUS           reduce using rule 44 (expression -> REAL_NUMBER .)
    PLUS            reduce using rule 44 (expression -> REAL_NUMBER .)
    DIVIDE          reduce using rule 44 (expression -> REAL_NUMBER .)
    MODULO          reduce using rule 44 (expression -> REAL_NUMBER .)
    TIMES           reduce using rule 44 (expression -> REAL_NUMBER .)
    PLEQUAL         reduce using rule 44 (expression -> REAL_NUMBER .)
    MIEQUAL         reduce using rule 44 (expression -> REAL_NUMBER .)
    MTEQUAL         reduce using rule 44 (expression -> REAL_NUMBER .)
    DIEQUAL         reduce using rule 44 (expression -> REAL_NUMBER .)
    MOEQUAL         reduce using rule 44 (expression -> REAL_NUMBER .)
    EQUAL           reduce using rule 44 (expression -> REAL_NUMBER .)
    RPAREN          reduce using rule 44 (expression -> REAL_NUMBER .)
    SEMICOLON       reduce using rule 44 (expression -> REAL_NUMBER .)
    COMMA           reduce using rule 44 (expression -> REAL_NUMBER .)


state 46

    (22) statement -> if_statement .

    return          reduce using rule 22 (statement -> if_statement .)
    ID              reduce using rule 22 (statement -> if_statement .)
    break           reduce using rule 22 (statement -> if_statement .)
    continue        reduce using rule 22 (statement -> if_statement .)
    SEMICOLON       reduce using rule 22 (statement -> if_statement .)
    public          reduce using rule 22 (statement -> if_statement .)
    REAL_NUMBER     reduce using rule 22 (statement -> if_statement .)
    NUMBER          reduce using rule 22 (statement -> if_statement .)
    LPAREN          reduce using rule 22 (statement -> if_statement .)
    LBRACE          reduce using rule 22 (statement -> if_statement .)
    if              reduce using rule 22 (statement -> if_statement .)
    for             reduce using rule 22 (statement -> if_statement .)
    MINUS           reduce using rule 22 (statement -> if_statement .)
    DBPLUS          reduce using rule 22 (statement -> if_statement .)
    DBMINUS         reduce using rule 22 (statement -> if_statement .)
    boolean         reduce using rule 22 (statement -> if_statement .)
    byte            reduce using rule 22 (statement -> if_statement .)
    void            reduce using rule 22 (statement -> if_statement .)
    char            reduce using rule 22 (statement -> if_statement .)
    short           reduce using rule 22 (statement -> if_statement .)
    int             reduce using rule 22 (statement -> if_statement .)
    float           reduce using rule 22 (statement -> if_statement .)
    long            reduce using rule 22 (statement -> if_statement .)
    double          reduce using rule 22 (statement -> if_statement .)
    RBRACE          reduce using rule 22 (statement -> if_statement .)
    else            reduce using rule 22 (statement -> if_statement .)


state 47

    (32) variable_declaration -> public . type variable_declarator cont_var_dec
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24
    ID              shift and go to state 21

    class_name                     shift and go to state 18
    type_specifier                 shift and go to state 11
    type                           shift and go to state 76

state 48

    (42) expression -> testing_expression .

    LPAREN          reduce using rule 42 (expression -> testing_expression .)
    DBPLUS          reduce using rule 42 (expression -> testing_expression .)
    DBMINUS         reduce using rule 42 (expression -> testing_expression .)
    GT              reduce using rule 42 (expression -> testing_expression .)
    LT              reduce using rule 42 (expression -> testing_expression .)
    GTE             reduce using rule 42 (expression -> testing_expression .)
    LTE             reduce using rule 42 (expression -> testing_expression .)
    DBEQUAL         reduce using rule 42 (expression -> testing_expression .)
    NEQUAL          reduce using rule 42 (expression -> testing_expression .)
    MINUS           reduce using rule 42 (expression -> testing_expression .)
    PLUS            reduce using rule 42 (expression -> testing_expression .)
    DIVIDE          reduce using rule 42 (expression -> testing_expression .)
    MODULO          reduce using rule 42 (expression -> testing_expression .)
    TIMES           reduce using rule 42 (expression -> testing_expression .)
    PLEQUAL         reduce using rule 42 (expression -> testing_expression .)
    MIEQUAL         reduce using rule 42 (expression -> testing_expression .)
    MTEQUAL         reduce using rule 42 (expression -> testing_expression .)
    DIEQUAL         reduce using rule 42 (expression -> testing_expression .)
    MOEQUAL         reduce using rule 42 (expression -> testing_expression .)
    EQUAL           reduce using rule 42 (expression -> testing_expression .)
    RPAREN          reduce using rule 42 (expression -> testing_expression .)
    SEMICOLON       reduce using rule 42 (expression -> testing_expression .)
    COMMA           reduce using rule 42 (expression -> testing_expression .)


state 49

    (23) statement -> for_statement .

    return          reduce using rule 23 (statement -> for_statement .)
    ID              reduce using rule 23 (statement -> for_statement .)
    break           reduce using rule 23 (statement -> for_statement .)
    continue        reduce using rule 23 (statement -> for_statement .)
    SEMICOLON       reduce using rule 23 (statement -> for_statement .)
    public          reduce using rule 23 (statement -> for_statement .)
    REAL_NUMBER     reduce using rule 23 (statement -> for_statement .)
    NUMBER          reduce using rule 23 (statement -> for_statement .)
    LPAREN          reduce using rule 23 (statement -> for_statement .)
    LBRACE          reduce using rule 23 (statement -> for_statement .)
    if              reduce using rule 23 (statement -> for_statement .)
    for             reduce using rule 23 (statement -> for_statement .)
    MINUS           reduce using rule 23 (statement -> for_statement .)
    DBPLUS          reduce using rule 23 (statement -> for_statement .)
    DBMINUS         reduce using rule 23 (statement -> for_statement .)
    boolean         reduce using rule 23 (statement -> for_statement .)
    byte            reduce using rule 23 (statement -> for_statement .)
    void            reduce using rule 23 (statement -> for_statement .)
    char            reduce using rule 23 (statement -> for_statement .)
    short           reduce using rule 23 (statement -> for_statement .)
    int             reduce using rule 23 (statement -> for_statement .)
    float           reduce using rule 23 (statement -> for_statement .)
    long            reduce using rule 23 (statement -> for_statement .)
    double          reduce using rule 23 (statement -> for_statement .)
    RBRACE          reduce using rule 23 (statement -> for_statement .)
    else            reduce using rule 23 (statement -> for_statement .)


state 50

    (24) statement -> return . expression SEMICOLON
    (25) statement -> return . SEMICOLON
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    SEMICOLON       shift and go to state 77
    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 78
    testing_expression             shift and go to state 48

state 51

    (27) statement -> break . ID SEMICOLON
    (28) statement -> break . SEMICOLON

    ID              shift and go to state 79
    SEMICOLON       shift and go to state 80


state 52

    (46) expression -> LPAREN . expression RPAREN
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 81
    testing_expression             shift and go to state 48

state 53

    (26) statement -> ID . COLON statement
    (43) expression -> ID .
    (78) class_name -> ID .

    COLON           shift and go to state 82
    SEMICOLON       reduce using rule 43 (expression -> ID .)
    LPAREN          reduce using rule 43 (expression -> ID .)
    DBPLUS          reduce using rule 43 (expression -> ID .)
    DBMINUS         reduce using rule 43 (expression -> ID .)
    GT              reduce using rule 43 (expression -> ID .)
    LT              reduce using rule 43 (expression -> ID .)
    GTE             reduce using rule 43 (expression -> ID .)
    LTE             reduce using rule 43 (expression -> ID .)
    DBEQUAL         reduce using rule 43 (expression -> ID .)
    NEQUAL          reduce using rule 43 (expression -> ID .)
    MINUS           reduce using rule 43 (expression -> ID .)
    PLUS            reduce using rule 43 (expression -> ID .)
    DIVIDE          reduce using rule 43 (expression -> ID .)
    MODULO          reduce using rule 43 (expression -> ID .)
    TIMES           reduce using rule 43 (expression -> ID .)
    PLEQUAL         reduce using rule 43 (expression -> ID .)
    MIEQUAL         reduce using rule 43 (expression -> ID .)
    MTEQUAL         reduce using rule 43 (expression -> ID .)
    DIEQUAL         reduce using rule 43 (expression -> ID .)
    MOEQUAL         reduce using rule 43 (expression -> ID .)
    EQUAL           reduce using rule 43 (expression -> ID .)
    ID              reduce using rule 78 (class_name -> ID .)


state 54

    (98) for_statement -> for . LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement

    LPAREN          shift and go to state 83


state 55

    (29) statement -> continue . ID SEMICOLON
    (30) statement -> continue . SEMICOLON

    ID              shift and go to state 84
    SEMICOLON       shift and go to state 85


state 56

    (20) statement -> expression . SEMICOLON
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    SEMICOLON       shift and go to state 94
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 57

    (34) cont_var_dec -> COMMA . variable_declarator cont_var_dec
    (36) variable_declarator -> . ID LBRACKET RBRACKET cont_var_declarator
    (37) variable_declarator -> . ID cont_var_declarator

    ID              shift and go to state 29

    variable_declarator            shift and go to state 108

state 58

    (35) cont_var_dec -> SEMICOLON .

    static          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    SEMICOLON       reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    public          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    boolean         reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    byte            reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    void            reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    char            reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    short           reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    int             reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    float           reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    long            reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    double          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    ID              reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    RBRACE          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    return          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    break           reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    continue        reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    REAL_NUMBER     reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    NUMBER          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    LPAREN          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    LBRACE          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    if              reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    for             reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    MINUS           reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    DBPLUS          reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    DBMINUS         reduce using rule 35 (cont_var_dec -> SEMICOLON .)
    else            reduce using rule 35 (cont_var_dec -> SEMICOLON .)


state 59

    (33) variable_declaration -> type variable_declarator cont_var_dec .

    static          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    SEMICOLON       reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    public          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    boolean         reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    byte            reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    void            reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    char            reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    short           reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    int             reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    float           reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    long            reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    double          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    ID              reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    RBRACE          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    return          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    break           reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    continue        reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    REAL_NUMBER     reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    NUMBER          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    LPAREN          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    LBRACE          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    if              reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    for             reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    MINUS           reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    DBPLUS          reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    DBMINUS         reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)
    else            reduce using rule 33 (variable_declaration -> type variable_declarator cont_var_dec .)


state 60

    (38) cont_var_declarator -> EQUAL . variable_initializer
    (40) variable_initializer -> . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    variable_initializer           shift and go to state 109
    numeric_expression             shift and go to state 38
    expression                     shift and go to state 110
    testing_expression             shift and go to state 48

state 61

    (36) variable_declarator -> ID LBRACKET . RBRACKET cont_var_declarator

    RBRACKET        shift and go to state 111


state 62

    (37) variable_declarator -> ID cont_var_declarator .

    COMMA           reduce using rule 37 (variable_declarator -> ID cont_var_declarator .)
    SEMICOLON       reduce using rule 37 (variable_declarator -> ID cont_var_declarator .)


state 63

    (15) method_declaration -> public static void . main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block

    main            shift and go to state 112


state 64

    (11) method_declaration -> public type ID . LPAREN parameter_list RPAREN statement_block
    (12) method_declaration -> public type ID . LPAREN RPAREN statement_block
    (13) method_declaration -> public type ID . LPAREN parameter_list RPAREN SEMICOLON
    (14) method_declaration -> public type ID . LPAREN RPAREN SEMICOLON
    (36) variable_declarator -> ID . LBRACKET RBRACKET cont_var_declarator
    (37) variable_declarator -> ID . cont_var_declarator
    (38) cont_var_declarator -> . EQUAL variable_initializer
    (39) cont_var_declarator -> .

    LPAREN          shift and go to state 113
    LBRACKET        shift and go to state 61
    EQUAL           shift and go to state 60
    COMMA           reduce using rule 39 (cont_var_declarator -> .)
    SEMICOLON       reduce using rule 39 (cont_var_declarator -> .)

    cont_var_declarator            shift and go to state 62

state 65

    (32) variable_declaration -> public type variable_declarator . cont_var_dec
    (34) cont_var_dec -> . COMMA variable_declarator cont_var_dec
    (35) cont_var_dec -> . SEMICOLON

    COMMA           shift and go to state 57
    SEMICOLON       shift and go to state 58

    cont_var_dec                   shift and go to state 114

state 66

    (9) constructor_declaration -> public ID LPAREN . parameter_list RPAREN statement_block
    (10) constructor_declaration -> public ID LPAREN . RPAREN statement_block
    (88) parameter_list -> . parameter cont_param
    (91) parameter -> . type ID
    (92) parameter -> . type ID LBRACKET RBRACKET
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    RPAREN          shift and go to state 115
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24
    ID              shift and go to state 21

    type_specifier                 shift and go to state 11
    parameter_list                 shift and go to state 118
    class_name                     shift and go to state 18
    type                           shift and go to state 116
    parameter                      shift and go to state 117

state 67

    (1) class_declaration -> public class ID LBRACE field_declaration cont_field RBRACE .

    $end            reduce using rule 1 (class_declaration -> public class ID LBRACE field_declaration cont_field RBRACE .)


state 68

    (2) cont_field -> field_declaration cont_field .

    RBRACE          reduce using rule 2 (cont_field -> field_declaration cont_field .)


state 69

    (51) numeric_expression -> DBPLUS expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 51 (numeric_expression -> DBPLUS expression .)
    RPAREN          reduce using rule 51 (numeric_expression -> DBPLUS expression .)
    COMMA           reduce using rule 51 (numeric_expression -> DBPLUS expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! DBPLUS          [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! DBMINUS         [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! GT              [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! LT              [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! GTE             [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! LTE             [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! DBEQUAL         [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! NEQUAL          [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! MINUS           [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! PLUS            [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! DIVIDE          [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! MODULO          [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! TIMES           [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! PLEQUAL         [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! MIEQUAL         [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! MTEQUAL         [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! DIEQUAL         [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! MOEQUAL         [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]
  ! EQUAL           [ reduce using rule 51 (numeric_expression -> DBPLUS expression .) ]

    operator                       shift and go to state 90

state 70

    (43) expression -> ID .

    LPAREN          reduce using rule 43 (expression -> ID .)
    DBPLUS          reduce using rule 43 (expression -> ID .)
    DBMINUS         reduce using rule 43 (expression -> ID .)
    GT              reduce using rule 43 (expression -> ID .)
    LT              reduce using rule 43 (expression -> ID .)
    GTE             reduce using rule 43 (expression -> ID .)
    LTE             reduce using rule 43 (expression -> ID .)
    DBEQUAL         reduce using rule 43 (expression -> ID .)
    NEQUAL          reduce using rule 43 (expression -> ID .)
    MINUS           reduce using rule 43 (expression -> ID .)
    PLUS            reduce using rule 43 (expression -> ID .)
    DIVIDE          reduce using rule 43 (expression -> ID .)
    MODULO          reduce using rule 43 (expression -> ID .)
    TIMES           reduce using rule 43 (expression -> ID .)
    PLEQUAL         reduce using rule 43 (expression -> ID .)
    MIEQUAL         reduce using rule 43 (expression -> ID .)
    MTEQUAL         reduce using rule 43 (expression -> ID .)
    DIEQUAL         reduce using rule 43 (expression -> ID .)
    MOEQUAL         reduce using rule 43 (expression -> ID .)
    EQUAL           reduce using rule 43 (expression -> ID .)
    RPAREN          reduce using rule 43 (expression -> ID .)
    SEMICOLON       reduce using rule 43 (expression -> ID .)
    COMMA           reduce using rule 43 (expression -> ID .)


state 71

    (93) if_statement -> if LPAREN . if_part_1 RPAREN statement action1
    (94) if_statement -> if LPAREN . if_part_1 RPAREN statement action1 else statement action2
    (95) if_part_1 -> . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 120
    if_part_1                      shift and go to state 119
    testing_expression             shift and go to state 48

state 72

    (52) numeric_expression -> DBMINUS expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 52 (numeric_expression -> DBMINUS expression .)
    RPAREN          reduce using rule 52 (numeric_expression -> DBMINUS expression .)
    COMMA           reduce using rule 52 (numeric_expression -> DBMINUS expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! DBPLUS          [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! DBMINUS         [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! GT              [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! LT              [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! GTE             [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! LTE             [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! DBEQUAL         [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! NEQUAL          [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! MINUS           [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! PLUS            [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! DIVIDE          [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! MODULO          [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! TIMES           [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! PLEQUAL         [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! MIEQUAL         [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! MTEQUAL         [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! DIEQUAL         [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! MOEQUAL         [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]
  ! EQUAL           [ reduce using rule 52 (numeric_expression -> DBMINUS expression .) ]

    operator                       shift and go to state 90

state 73

    (50) numeric_expression -> MINUS expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 50 (numeric_expression -> MINUS expression .)
    RPAREN          reduce using rule 50 (numeric_expression -> MINUS expression .)
    COMMA           reduce using rule 50 (numeric_expression -> MINUS expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! DBPLUS          [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! DBMINUS         [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! GT              [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! LT              [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! GTE             [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! LTE             [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! DBEQUAL         [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! NEQUAL          [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! PLUS            [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! MODULO          [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! TIMES           [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! PLEQUAL         [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! MIEQUAL         [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! MTEQUAL         [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! DIEQUAL         [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! MOEQUAL         [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]
  ! EQUAL           [ reduce using rule 50 (numeric_expression -> MINUS expression .) ]

    operator                       shift and go to state 90

state 74

    (17) statement_cont -> statement . statement_cont
    (17) statement_cont -> . statement statement_cont
    (18) statement_cont -> .
    (19) statement -> . variable_declaration
    (20) statement -> . expression SEMICOLON
    (21) statement -> . statement_block
    (22) statement -> . if_statement
    (23) statement -> . for_statement
    (24) statement -> . return expression SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . ID COLON statement
    (27) statement -> . break ID SEMICOLON
    (28) statement -> . break SEMICOLON
    (29) statement -> . continue ID SEMICOLON
    (30) statement -> . continue SEMICOLON
    (31) statement -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (16) statement_block -> . LBRACE statement statement_cont RBRACE
    (93) if_statement -> . if LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> . if LPAREN if_part_1 RPAREN statement action1 else statement action2
    (98) for_statement -> . for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    RBRACE          reduce using rule 18 (statement_cont -> .)
    return          shift and go to state 50
    ID              shift and go to state 53
    break           shift and go to state 51
    continue        shift and go to state 55
    SEMICOLON       shift and go to state 42
    public          shift and go to state 47
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    LBRACE          shift and go to state 26
    if              shift and go to state 40
    for             shift and go to state 54
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    class_name                     shift and go to state 18
    statement_block                shift and go to state 37
    numeric_expression             shift and go to state 38
    variable_declaration           shift and go to state 39
    type_specifier                 shift and go to state 11
    statement                      shift and go to state 74
    if_statement                   shift and go to state 46
    type                           shift and go to state 16
    testing_expression             shift and go to state 48
    for_statement                  shift and go to state 49
    statement_cont                 shift and go to state 121
    expression                     shift and go to state 56

state 75

    (16) statement_block -> LBRACE statement statement_cont . RBRACE

    RBRACE          shift and go to state 122


state 76

    (32) variable_declaration -> public type . variable_declarator cont_var_dec
    (36) variable_declarator -> . ID LBRACKET RBRACKET cont_var_declarator
    (37) variable_declarator -> . ID cont_var_declarator

    ID              shift and go to state 29

    variable_declarator            shift and go to state 65

state 77

    (25) statement -> return SEMICOLON .

    return          reduce using rule 25 (statement -> return SEMICOLON .)
    ID              reduce using rule 25 (statement -> return SEMICOLON .)
    break           reduce using rule 25 (statement -> return SEMICOLON .)
    continue        reduce using rule 25 (statement -> return SEMICOLON .)
    SEMICOLON       reduce using rule 25 (statement -> return SEMICOLON .)
    public          reduce using rule 25 (statement -> return SEMICOLON .)
    REAL_NUMBER     reduce using rule 25 (statement -> return SEMICOLON .)
    NUMBER          reduce using rule 25 (statement -> return SEMICOLON .)
    LPAREN          reduce using rule 25 (statement -> return SEMICOLON .)
    LBRACE          reduce using rule 25 (statement -> return SEMICOLON .)
    if              reduce using rule 25 (statement -> return SEMICOLON .)
    for             reduce using rule 25 (statement -> return SEMICOLON .)
    MINUS           reduce using rule 25 (statement -> return SEMICOLON .)
    DBPLUS          reduce using rule 25 (statement -> return SEMICOLON .)
    DBMINUS         reduce using rule 25 (statement -> return SEMICOLON .)
    boolean         reduce using rule 25 (statement -> return SEMICOLON .)
    byte            reduce using rule 25 (statement -> return SEMICOLON .)
    void            reduce using rule 25 (statement -> return SEMICOLON .)
    char            reduce using rule 25 (statement -> return SEMICOLON .)
    short           reduce using rule 25 (statement -> return SEMICOLON .)
    int             reduce using rule 25 (statement -> return SEMICOLON .)
    float           reduce using rule 25 (statement -> return SEMICOLON .)
    long            reduce using rule 25 (statement -> return SEMICOLON .)
    double          reduce using rule 25 (statement -> return SEMICOLON .)
    RBRACE          reduce using rule 25 (statement -> return SEMICOLON .)
    else            reduce using rule 25 (statement -> return SEMICOLON .)


state 78

    (24) statement -> return expression . SEMICOLON
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    SEMICOLON       shift and go to state 123
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 79

    (27) statement -> break ID . SEMICOLON

    SEMICOLON       shift and go to state 124


state 80

    (28) statement -> break SEMICOLON .

    return          reduce using rule 28 (statement -> break SEMICOLON .)
    ID              reduce using rule 28 (statement -> break SEMICOLON .)
    break           reduce using rule 28 (statement -> break SEMICOLON .)
    continue        reduce using rule 28 (statement -> break SEMICOLON .)
    SEMICOLON       reduce using rule 28 (statement -> break SEMICOLON .)
    public          reduce using rule 28 (statement -> break SEMICOLON .)
    REAL_NUMBER     reduce using rule 28 (statement -> break SEMICOLON .)
    NUMBER          reduce using rule 28 (statement -> break SEMICOLON .)
    LPAREN          reduce using rule 28 (statement -> break SEMICOLON .)
    LBRACE          reduce using rule 28 (statement -> break SEMICOLON .)
    if              reduce using rule 28 (statement -> break SEMICOLON .)
    for             reduce using rule 28 (statement -> break SEMICOLON .)
    MINUS           reduce using rule 28 (statement -> break SEMICOLON .)
    DBPLUS          reduce using rule 28 (statement -> break SEMICOLON .)
    DBMINUS         reduce using rule 28 (statement -> break SEMICOLON .)
    boolean         reduce using rule 28 (statement -> break SEMICOLON .)
    byte            reduce using rule 28 (statement -> break SEMICOLON .)
    void            reduce using rule 28 (statement -> break SEMICOLON .)
    char            reduce using rule 28 (statement -> break SEMICOLON .)
    short           reduce using rule 28 (statement -> break SEMICOLON .)
    int             reduce using rule 28 (statement -> break SEMICOLON .)
    float           reduce using rule 28 (statement -> break SEMICOLON .)
    long            reduce using rule 28 (statement -> break SEMICOLON .)
    double          reduce using rule 28 (statement -> break SEMICOLON .)
    RBRACE          reduce using rule 28 (statement -> break SEMICOLON .)
    else            reduce using rule 28 (statement -> break SEMICOLON .)


state 81

    (46) expression -> LPAREN expression . RPAREN
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    RPAREN          shift and go to state 125
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 82

    (26) statement -> ID COLON . statement
    (19) statement -> . variable_declaration
    (20) statement -> . expression SEMICOLON
    (21) statement -> . statement_block
    (22) statement -> . if_statement
    (23) statement -> . for_statement
    (24) statement -> . return expression SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . ID COLON statement
    (27) statement -> . break ID SEMICOLON
    (28) statement -> . break SEMICOLON
    (29) statement -> . continue ID SEMICOLON
    (30) statement -> . continue SEMICOLON
    (31) statement -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (16) statement_block -> . LBRACE statement statement_cont RBRACE
    (93) if_statement -> . if LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> . if LPAREN if_part_1 RPAREN statement action1 else statement action2
    (98) for_statement -> . for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    return          shift and go to state 50
    ID              shift and go to state 53
    break           shift and go to state 51
    continue        shift and go to state 55
    SEMICOLON       shift and go to state 42
    public          shift and go to state 47
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    LBRACE          shift and go to state 26
    if              shift and go to state 40
    for             shift and go to state 54
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    class_name                     shift and go to state 18
    statement_block                shift and go to state 37
    numeric_expression             shift and go to state 38
    variable_declaration           shift and go to state 39
    type_specifier                 shift and go to state 11
    statement                      shift and go to state 126
    if_statement                   shift and go to state 46
    type                           shift and go to state 16
    testing_expression             shift and go to state 48
    for_statement                  shift and go to state 49
    expression                     shift and go to state 56

state 83

    (98) for_statement -> for LPAREN . for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (99) for_part_1 -> . variable_declaration
    (100) for_part_1 -> . expression SEMICOLON
    (101) for_part_1 -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    SEMICOLON       shift and go to state 128
    public          shift and go to state 47
    ID              shift and go to state 130
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    type_specifier                 shift and go to state 11
    for_part_1                     shift and go to state 127
    type                           shift and go to state 16
    numeric_expression             shift and go to state 38
    expression                     shift and go to state 131
    variable_declaration           shift and go to state 129
    class_name                     shift and go to state 18
    testing_expression             shift and go to state 48

state 84

    (29) statement -> continue ID . SEMICOLON

    SEMICOLON       shift and go to state 132


state 85

    (30) statement -> continue SEMICOLON .

    return          reduce using rule 30 (statement -> continue SEMICOLON .)
    ID              reduce using rule 30 (statement -> continue SEMICOLON .)
    break           reduce using rule 30 (statement -> continue SEMICOLON .)
    continue        reduce using rule 30 (statement -> continue SEMICOLON .)
    SEMICOLON       reduce using rule 30 (statement -> continue SEMICOLON .)
    public          reduce using rule 30 (statement -> continue SEMICOLON .)
    REAL_NUMBER     reduce using rule 30 (statement -> continue SEMICOLON .)
    NUMBER          reduce using rule 30 (statement -> continue SEMICOLON .)
    LPAREN          reduce using rule 30 (statement -> continue SEMICOLON .)
    LBRACE          reduce using rule 30 (statement -> continue SEMICOLON .)
    if              reduce using rule 30 (statement -> continue SEMICOLON .)
    for             reduce using rule 30 (statement -> continue SEMICOLON .)
    MINUS           reduce using rule 30 (statement -> continue SEMICOLON .)
    DBPLUS          reduce using rule 30 (statement -> continue SEMICOLON .)
    DBMINUS         reduce using rule 30 (statement -> continue SEMICOLON .)
    boolean         reduce using rule 30 (statement -> continue SEMICOLON .)
    byte            reduce using rule 30 (statement -> continue SEMICOLON .)
    void            reduce using rule 30 (statement -> continue SEMICOLON .)
    char            reduce using rule 30 (statement -> continue SEMICOLON .)
    short           reduce using rule 30 (statement -> continue SEMICOLON .)
    int             reduce using rule 30 (statement -> continue SEMICOLON .)
    float           reduce using rule 30 (statement -> continue SEMICOLON .)
    long            reduce using rule 30 (statement -> continue SEMICOLON .)
    double          reduce using rule 30 (statement -> continue SEMICOLON .)
    RBRACE          reduce using rule 30 (statement -> continue SEMICOLON .)
    else            reduce using rule 30 (statement -> continue SEMICOLON .)


state 86

    (47) expression -> expression LPAREN . exp_cont RPAREN
    (48) exp_cont -> . arglist
    (49) exp_cont -> .
    (79) arglist -> . expression cont_arglist
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    RPAREN          reduce using rule 49 (exp_cont -> .)
    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    exp_cont                       shift and go to state 133
    numeric_expression             shift and go to state 38
    arglist                        shift and go to state 134
    expression                     shift and go to state 135
    testing_expression             shift and go to state 48

state 87

    (53) numeric_expression -> expression DBPLUS .

    SEMICOLON       reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    LPAREN          reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    DBPLUS          reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    DBMINUS         reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    GT              reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    LT              reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    GTE             reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    LTE             reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    DBEQUAL         reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    NEQUAL          reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    MINUS           reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    PLUS            reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    DIVIDE          reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    MODULO          reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    TIMES           reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    PLEQUAL         reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    MIEQUAL         reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    MTEQUAL         reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    DIEQUAL         reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    MOEQUAL         reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    EQUAL           reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    RPAREN          reduce using rule 53 (numeric_expression -> expression DBPLUS .)
    COMMA           reduce using rule 53 (numeric_expression -> expression DBPLUS .)


state 88

    (86) testing_expression -> expression DBEQUAL . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 136
    testing_expression             shift and go to state 48

state 89

    (66) operator -> EQUAL .

    ID              reduce using rule 66 (operator -> EQUAL .)
    REAL_NUMBER     reduce using rule 66 (operator -> EQUAL .)
    NUMBER          reduce using rule 66 (operator -> EQUAL .)
    LPAREN          reduce using rule 66 (operator -> EQUAL .)
    MINUS           reduce using rule 66 (operator -> EQUAL .)
    DBPLUS          reduce using rule 66 (operator -> EQUAL .)
    DBMINUS         reduce using rule 66 (operator -> EQUAL .)


state 90

    (55) numeric_expression -> expression operator . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 137
    testing_expression             shift and go to state 48

state 91

    (56) operator -> MINUS .

    ID              reduce using rule 56 (operator -> MINUS .)
    REAL_NUMBER     reduce using rule 56 (operator -> MINUS .)
    NUMBER          reduce using rule 56 (operator -> MINUS .)
    LPAREN          reduce using rule 56 (operator -> MINUS .)
    MINUS           reduce using rule 56 (operator -> MINUS .)
    DBPLUS          reduce using rule 56 (operator -> MINUS .)
    DBMINUS         reduce using rule 56 (operator -> MINUS .)


state 92

    (84) testing_expression -> expression GTE . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 138
    testing_expression             shift and go to state 48

state 93

    (54) numeric_expression -> expression DBMINUS .

    SEMICOLON       reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    LPAREN          reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    DBPLUS          reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    DBMINUS         reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    GT              reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    LT              reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    GTE             reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    LTE             reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    DBEQUAL         reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    NEQUAL          reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    MINUS           reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    PLUS            reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    DIVIDE          reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    MODULO          reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    TIMES           reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    PLEQUAL         reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    MIEQUAL         reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    MTEQUAL         reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    DIEQUAL         reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    MOEQUAL         reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    EQUAL           reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    RPAREN          reduce using rule 54 (numeric_expression -> expression DBMINUS .)
    COMMA           reduce using rule 54 (numeric_expression -> expression DBMINUS .)


state 94

    (20) statement -> expression SEMICOLON .

    return          reduce using rule 20 (statement -> expression SEMICOLON .)
    ID              reduce using rule 20 (statement -> expression SEMICOLON .)
    break           reduce using rule 20 (statement -> expression SEMICOLON .)
    continue        reduce using rule 20 (statement -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 20 (statement -> expression SEMICOLON .)
    public          reduce using rule 20 (statement -> expression SEMICOLON .)
    REAL_NUMBER     reduce using rule 20 (statement -> expression SEMICOLON .)
    NUMBER          reduce using rule 20 (statement -> expression SEMICOLON .)
    LPAREN          reduce using rule 20 (statement -> expression SEMICOLON .)
    LBRACE          reduce using rule 20 (statement -> expression SEMICOLON .)
    if              reduce using rule 20 (statement -> expression SEMICOLON .)
    for             reduce using rule 20 (statement -> expression SEMICOLON .)
    MINUS           reduce using rule 20 (statement -> expression SEMICOLON .)
    DBPLUS          reduce using rule 20 (statement -> expression SEMICOLON .)
    DBMINUS         reduce using rule 20 (statement -> expression SEMICOLON .)
    boolean         reduce using rule 20 (statement -> expression SEMICOLON .)
    byte            reduce using rule 20 (statement -> expression SEMICOLON .)
    void            reduce using rule 20 (statement -> expression SEMICOLON .)
    char            reduce using rule 20 (statement -> expression SEMICOLON .)
    short           reduce using rule 20 (statement -> expression SEMICOLON .)
    int             reduce using rule 20 (statement -> expression SEMICOLON .)
    float           reduce using rule 20 (statement -> expression SEMICOLON .)
    long            reduce using rule 20 (statement -> expression SEMICOLON .)
    double          reduce using rule 20 (statement -> expression SEMICOLON .)
    RBRACE          reduce using rule 20 (statement -> expression SEMICOLON .)
    else            reduce using rule 20 (statement -> expression SEMICOLON .)


state 95

    (62) operator -> MIEQUAL .

    ID              reduce using rule 62 (operator -> MIEQUAL .)
    REAL_NUMBER     reduce using rule 62 (operator -> MIEQUAL .)
    NUMBER          reduce using rule 62 (operator -> MIEQUAL .)
    LPAREN          reduce using rule 62 (operator -> MIEQUAL .)
    MINUS           reduce using rule 62 (operator -> MIEQUAL .)
    DBPLUS          reduce using rule 62 (operator -> MIEQUAL .)
    DBMINUS         reduce using rule 62 (operator -> MIEQUAL .)


state 96

    (83) testing_expression -> expression LT . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 139
    testing_expression             shift and go to state 48

state 97

    (57) operator -> PLUS .

    ID              reduce using rule 57 (operator -> PLUS .)
    REAL_NUMBER     reduce using rule 57 (operator -> PLUS .)
    NUMBER          reduce using rule 57 (operator -> PLUS .)
    LPAREN          reduce using rule 57 (operator -> PLUS .)
    MINUS           reduce using rule 57 (operator -> PLUS .)
    DBPLUS          reduce using rule 57 (operator -> PLUS .)
    DBMINUS         reduce using rule 57 (operator -> PLUS .)


state 98

    (82) testing_expression -> expression GT . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 140
    testing_expression             shift and go to state 48

state 99

    (59) operator -> MODULO .

    ID              reduce using rule 59 (operator -> MODULO .)
    REAL_NUMBER     reduce using rule 59 (operator -> MODULO .)
    NUMBER          reduce using rule 59 (operator -> MODULO .)
    LPAREN          reduce using rule 59 (operator -> MODULO .)
    MINUS           reduce using rule 59 (operator -> MODULO .)
    DBPLUS          reduce using rule 59 (operator -> MODULO .)
    DBMINUS         reduce using rule 59 (operator -> MODULO .)


state 100

    (58) operator -> DIVIDE .

    ID              reduce using rule 58 (operator -> DIVIDE .)
    REAL_NUMBER     reduce using rule 58 (operator -> DIVIDE .)
    NUMBER          reduce using rule 58 (operator -> DIVIDE .)
    LPAREN          reduce using rule 58 (operator -> DIVIDE .)
    MINUS           reduce using rule 58 (operator -> DIVIDE .)
    DBPLUS          reduce using rule 58 (operator -> DIVIDE .)
    DBMINUS         reduce using rule 58 (operator -> DIVIDE .)


state 101

    (87) testing_expression -> expression NEQUAL . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 141
    testing_expression             shift and go to state 48

state 102

    (60) operator -> TIMES .

    ID              reduce using rule 60 (operator -> TIMES .)
    REAL_NUMBER     reduce using rule 60 (operator -> TIMES .)
    NUMBER          reduce using rule 60 (operator -> TIMES .)
    LPAREN          reduce using rule 60 (operator -> TIMES .)
    MINUS           reduce using rule 60 (operator -> TIMES .)
    DBPLUS          reduce using rule 60 (operator -> TIMES .)
    DBMINUS         reduce using rule 60 (operator -> TIMES .)


state 103

    (85) testing_expression -> expression LTE . expression
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 142
    testing_expression             shift and go to state 48

state 104

    (65) operator -> MOEQUAL .

    ID              reduce using rule 65 (operator -> MOEQUAL .)
    REAL_NUMBER     reduce using rule 65 (operator -> MOEQUAL .)
    NUMBER          reduce using rule 65 (operator -> MOEQUAL .)
    LPAREN          reduce using rule 65 (operator -> MOEQUAL .)
    MINUS           reduce using rule 65 (operator -> MOEQUAL .)
    DBPLUS          reduce using rule 65 (operator -> MOEQUAL .)
    DBMINUS         reduce using rule 65 (operator -> MOEQUAL .)


state 105

    (61) operator -> PLEQUAL .

    ID              reduce using rule 61 (operator -> PLEQUAL .)
    REAL_NUMBER     reduce using rule 61 (operator -> PLEQUAL .)
    NUMBER          reduce using rule 61 (operator -> PLEQUAL .)
    LPAREN          reduce using rule 61 (operator -> PLEQUAL .)
    MINUS           reduce using rule 61 (operator -> PLEQUAL .)
    DBPLUS          reduce using rule 61 (operator -> PLEQUAL .)
    DBMINUS         reduce using rule 61 (operator -> PLEQUAL .)


state 106

    (63) operator -> MTEQUAL .

    ID              reduce using rule 63 (operator -> MTEQUAL .)
    REAL_NUMBER     reduce using rule 63 (operator -> MTEQUAL .)
    NUMBER          reduce using rule 63 (operator -> MTEQUAL .)
    LPAREN          reduce using rule 63 (operator -> MTEQUAL .)
    MINUS           reduce using rule 63 (operator -> MTEQUAL .)
    DBPLUS          reduce using rule 63 (operator -> MTEQUAL .)
    DBMINUS         reduce using rule 63 (operator -> MTEQUAL .)


state 107

    (64) operator -> DIEQUAL .

    ID              reduce using rule 64 (operator -> DIEQUAL .)
    REAL_NUMBER     reduce using rule 64 (operator -> DIEQUAL .)
    NUMBER          reduce using rule 64 (operator -> DIEQUAL .)
    LPAREN          reduce using rule 64 (operator -> DIEQUAL .)
    MINUS           reduce using rule 64 (operator -> DIEQUAL .)
    DBPLUS          reduce using rule 64 (operator -> DIEQUAL .)
    DBMINUS         reduce using rule 64 (operator -> DIEQUAL .)


state 108

    (34) cont_var_dec -> COMMA variable_declarator . cont_var_dec
    (34) cont_var_dec -> . COMMA variable_declarator cont_var_dec
    (35) cont_var_dec -> . SEMICOLON

    COMMA           shift and go to state 57
    SEMICOLON       shift and go to state 58

    cont_var_dec                   shift and go to state 143

state 109

    (38) cont_var_declarator -> EQUAL variable_initializer .

    COMMA           reduce using rule 38 (cont_var_declarator -> EQUAL variable_initializer .)
    SEMICOLON       reduce using rule 38 (cont_var_declarator -> EQUAL variable_initializer .)


state 110

    (40) variable_initializer -> expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    COMMA           reduce using rule 40 (variable_initializer -> expression .)
    SEMICOLON       reduce using rule 40 (variable_initializer -> expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 111

    (36) variable_declarator -> ID LBRACKET RBRACKET . cont_var_declarator
    (38) cont_var_declarator -> . EQUAL variable_initializer
    (39) cont_var_declarator -> .

    EQUAL           shift and go to state 60
    COMMA           reduce using rule 39 (cont_var_declarator -> .)
    SEMICOLON       reduce using rule 39 (cont_var_declarator -> .)

    cont_var_declarator            shift and go to state 144

state 112

    (15) method_declaration -> public static void main . LPAREN String LBRACKET RBRACKET ID RPAREN statement_block

    LPAREN          shift and go to state 145


state 113

    (11) method_declaration -> public type ID LPAREN . parameter_list RPAREN statement_block
    (12) method_declaration -> public type ID LPAREN . RPAREN statement_block
    (13) method_declaration -> public type ID LPAREN . parameter_list RPAREN SEMICOLON
    (14) method_declaration -> public type ID LPAREN . RPAREN SEMICOLON
    (88) parameter_list -> . parameter cont_param
    (91) parameter -> . type ID
    (92) parameter -> . type ID LBRACKET RBRACKET
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    RPAREN          shift and go to state 146
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24
    ID              shift and go to state 21

    type_specifier                 shift and go to state 11
    parameter_list                 shift and go to state 147
    class_name                     shift and go to state 18
    type                           shift and go to state 116
    parameter                      shift and go to state 117

state 114

    (32) variable_declaration -> public type variable_declarator cont_var_dec .

    static          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    SEMICOLON       reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    public          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    boolean         reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    byte            reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    void            reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    char            reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    short           reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    int             reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    float           reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    long            reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    double          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    ID              reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    RBRACE          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    return          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    break           reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    continue        reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    REAL_NUMBER     reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    NUMBER          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    LPAREN          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    LBRACE          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    if              reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    for             reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    MINUS           reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    DBPLUS          reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    DBMINUS         reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)
    else            reduce using rule 32 (variable_declaration -> public type variable_declarator cont_var_dec .)


state 115

    (10) constructor_declaration -> public ID LPAREN RPAREN . statement_block
    (16) statement_block -> . LBRACE statement statement_cont RBRACE

    LBRACE          shift and go to state 26

    statement_block                shift and go to state 148

state 116

    (91) parameter -> type . ID
    (92) parameter -> type . ID LBRACKET RBRACKET

    ID              shift and go to state 149


state 117

    (88) parameter_list -> parameter . cont_param
    (89) cont_param -> . COMMA parameter cont_param
    (90) cont_param -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 90 (cont_param -> .)

    cont_param                     shift and go to state 150

state 118

    (9) constructor_declaration -> public ID LPAREN parameter_list . RPAREN statement_block

    RPAREN          shift and go to state 152


state 119

    (93) if_statement -> if LPAREN if_part_1 . RPAREN statement action1
    (94) if_statement -> if LPAREN if_part_1 . RPAREN statement action1 else statement action2

    RPAREN          shift and go to state 153


state 120

    (95) if_part_1 -> expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    RPAREN          reduce using rule 95 (if_part_1 -> expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 121

    (17) statement_cont -> statement statement_cont .

    RBRACE          reduce using rule 17 (statement_cont -> statement statement_cont .)


state 122

    (16) statement_block -> LBRACE statement statement_cont RBRACE .

    return          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    ID              reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    break           reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    continue        reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    SEMICOLON       reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    public          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    REAL_NUMBER     reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    NUMBER          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    LPAREN          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    LBRACE          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    if              reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    for             reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    MINUS           reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    DBPLUS          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    DBMINUS         reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    boolean         reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    byte            reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    void            reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    char            reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    short           reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    int             reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    float           reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    long            reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    double          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    RBRACE          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    static          reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)
    else            reduce using rule 16 (statement_block -> LBRACE statement statement_cont RBRACE .)


state 123

    (24) statement -> return expression SEMICOLON .

    return          reduce using rule 24 (statement -> return expression SEMICOLON .)
    ID              reduce using rule 24 (statement -> return expression SEMICOLON .)
    break           reduce using rule 24 (statement -> return expression SEMICOLON .)
    continue        reduce using rule 24 (statement -> return expression SEMICOLON .)
    SEMICOLON       reduce using rule 24 (statement -> return expression SEMICOLON .)
    public          reduce using rule 24 (statement -> return expression SEMICOLON .)
    REAL_NUMBER     reduce using rule 24 (statement -> return expression SEMICOLON .)
    NUMBER          reduce using rule 24 (statement -> return expression SEMICOLON .)
    LPAREN          reduce using rule 24 (statement -> return expression SEMICOLON .)
    LBRACE          reduce using rule 24 (statement -> return expression SEMICOLON .)
    if              reduce using rule 24 (statement -> return expression SEMICOLON .)
    for             reduce using rule 24 (statement -> return expression SEMICOLON .)
    MINUS           reduce using rule 24 (statement -> return expression SEMICOLON .)
    DBPLUS          reduce using rule 24 (statement -> return expression SEMICOLON .)
    DBMINUS         reduce using rule 24 (statement -> return expression SEMICOLON .)
    boolean         reduce using rule 24 (statement -> return expression SEMICOLON .)
    byte            reduce using rule 24 (statement -> return expression SEMICOLON .)
    void            reduce using rule 24 (statement -> return expression SEMICOLON .)
    char            reduce using rule 24 (statement -> return expression SEMICOLON .)
    short           reduce using rule 24 (statement -> return expression SEMICOLON .)
    int             reduce using rule 24 (statement -> return expression SEMICOLON .)
    float           reduce using rule 24 (statement -> return expression SEMICOLON .)
    long            reduce using rule 24 (statement -> return expression SEMICOLON .)
    double          reduce using rule 24 (statement -> return expression SEMICOLON .)
    RBRACE          reduce using rule 24 (statement -> return expression SEMICOLON .)
    else            reduce using rule 24 (statement -> return expression SEMICOLON .)


state 124

    (27) statement -> break ID SEMICOLON .

    return          reduce using rule 27 (statement -> break ID SEMICOLON .)
    ID              reduce using rule 27 (statement -> break ID SEMICOLON .)
    break           reduce using rule 27 (statement -> break ID SEMICOLON .)
    continue        reduce using rule 27 (statement -> break ID SEMICOLON .)
    SEMICOLON       reduce using rule 27 (statement -> break ID SEMICOLON .)
    public          reduce using rule 27 (statement -> break ID SEMICOLON .)
    REAL_NUMBER     reduce using rule 27 (statement -> break ID SEMICOLON .)
    NUMBER          reduce using rule 27 (statement -> break ID SEMICOLON .)
    LPAREN          reduce using rule 27 (statement -> break ID SEMICOLON .)
    LBRACE          reduce using rule 27 (statement -> break ID SEMICOLON .)
    if              reduce using rule 27 (statement -> break ID SEMICOLON .)
    for             reduce using rule 27 (statement -> break ID SEMICOLON .)
    MINUS           reduce using rule 27 (statement -> break ID SEMICOLON .)
    DBPLUS          reduce using rule 27 (statement -> break ID SEMICOLON .)
    DBMINUS         reduce using rule 27 (statement -> break ID SEMICOLON .)
    boolean         reduce using rule 27 (statement -> break ID SEMICOLON .)
    byte            reduce using rule 27 (statement -> break ID SEMICOLON .)
    void            reduce using rule 27 (statement -> break ID SEMICOLON .)
    char            reduce using rule 27 (statement -> break ID SEMICOLON .)
    short           reduce using rule 27 (statement -> break ID SEMICOLON .)
    int             reduce using rule 27 (statement -> break ID SEMICOLON .)
    float           reduce using rule 27 (statement -> break ID SEMICOLON .)
    long            reduce using rule 27 (statement -> break ID SEMICOLON .)
    double          reduce using rule 27 (statement -> break ID SEMICOLON .)
    RBRACE          reduce using rule 27 (statement -> break ID SEMICOLON .)
    else            reduce using rule 27 (statement -> break ID SEMICOLON .)


state 125

    (46) expression -> LPAREN expression RPAREN .

    LPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DBPLUS          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DBMINUS         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    GTE             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    LTE             reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DBEQUAL         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    NEQUAL          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MODULO          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    PLEQUAL         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MIEQUAL         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MTEQUAL         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    DIEQUAL         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    MOEQUAL         reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 46 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (expression -> LPAREN expression RPAREN .)


state 126

    (26) statement -> ID COLON statement .

    return          reduce using rule 26 (statement -> ID COLON statement .)
    ID              reduce using rule 26 (statement -> ID COLON statement .)
    break           reduce using rule 26 (statement -> ID COLON statement .)
    continue        reduce using rule 26 (statement -> ID COLON statement .)
    SEMICOLON       reduce using rule 26 (statement -> ID COLON statement .)
    public          reduce using rule 26 (statement -> ID COLON statement .)
    REAL_NUMBER     reduce using rule 26 (statement -> ID COLON statement .)
    NUMBER          reduce using rule 26 (statement -> ID COLON statement .)
    LPAREN          reduce using rule 26 (statement -> ID COLON statement .)
    LBRACE          reduce using rule 26 (statement -> ID COLON statement .)
    if              reduce using rule 26 (statement -> ID COLON statement .)
    for             reduce using rule 26 (statement -> ID COLON statement .)
    MINUS           reduce using rule 26 (statement -> ID COLON statement .)
    DBPLUS          reduce using rule 26 (statement -> ID COLON statement .)
    DBMINUS         reduce using rule 26 (statement -> ID COLON statement .)
    boolean         reduce using rule 26 (statement -> ID COLON statement .)
    byte            reduce using rule 26 (statement -> ID COLON statement .)
    void            reduce using rule 26 (statement -> ID COLON statement .)
    char            reduce using rule 26 (statement -> ID COLON statement .)
    short           reduce using rule 26 (statement -> ID COLON statement .)
    int             reduce using rule 26 (statement -> ID COLON statement .)
    float           reduce using rule 26 (statement -> ID COLON statement .)
    long            reduce using rule 26 (statement -> ID COLON statement .)
    double          reduce using rule 26 (statement -> ID COLON statement .)
    RBRACE          reduce using rule 26 (statement -> ID COLON statement .)
    else            reduce using rule 26 (statement -> ID COLON statement .)


state 127

    (98) for_statement -> for LPAREN for_part_1 . for_part_2 SEMICOLON for_part_3 RPAREN statement
    (102) for_part_2 -> . expression
    (103) for_part_2 -> .
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    SEMICOLON       reduce using rule 103 (for_part_2 -> .)
    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    for_part_2                     shift and go to state 154
    numeric_expression             shift and go to state 38
    expression                     shift and go to state 155
    testing_expression             shift and go to state 48

state 128

    (101) for_part_1 -> SEMICOLON .

    ID              reduce using rule 101 (for_part_1 -> SEMICOLON .)
    REAL_NUMBER     reduce using rule 101 (for_part_1 -> SEMICOLON .)
    NUMBER          reduce using rule 101 (for_part_1 -> SEMICOLON .)
    LPAREN          reduce using rule 101 (for_part_1 -> SEMICOLON .)
    MINUS           reduce using rule 101 (for_part_1 -> SEMICOLON .)
    DBPLUS          reduce using rule 101 (for_part_1 -> SEMICOLON .)
    DBMINUS         reduce using rule 101 (for_part_1 -> SEMICOLON .)
    SEMICOLON       reduce using rule 101 (for_part_1 -> SEMICOLON .)


state 129

    (99) for_part_1 -> variable_declaration .

    ID              reduce using rule 99 (for_part_1 -> variable_declaration .)
    REAL_NUMBER     reduce using rule 99 (for_part_1 -> variable_declaration .)
    NUMBER          reduce using rule 99 (for_part_1 -> variable_declaration .)
    LPAREN          reduce using rule 99 (for_part_1 -> variable_declaration .)
    MINUS           reduce using rule 99 (for_part_1 -> variable_declaration .)
    DBPLUS          reduce using rule 99 (for_part_1 -> variable_declaration .)
    DBMINUS         reduce using rule 99 (for_part_1 -> variable_declaration .)
    SEMICOLON       reduce using rule 99 (for_part_1 -> variable_declaration .)


state 130

    (43) expression -> ID .
    (78) class_name -> ID .

    SEMICOLON       reduce using rule 43 (expression -> ID .)
    LPAREN          reduce using rule 43 (expression -> ID .)
    DBPLUS          reduce using rule 43 (expression -> ID .)
    DBMINUS         reduce using rule 43 (expression -> ID .)
    GT              reduce using rule 43 (expression -> ID .)
    LT              reduce using rule 43 (expression -> ID .)
    GTE             reduce using rule 43 (expression -> ID .)
    LTE             reduce using rule 43 (expression -> ID .)
    DBEQUAL         reduce using rule 43 (expression -> ID .)
    NEQUAL          reduce using rule 43 (expression -> ID .)
    MINUS           reduce using rule 43 (expression -> ID .)
    PLUS            reduce using rule 43 (expression -> ID .)
    DIVIDE          reduce using rule 43 (expression -> ID .)
    MODULO          reduce using rule 43 (expression -> ID .)
    TIMES           reduce using rule 43 (expression -> ID .)
    PLEQUAL         reduce using rule 43 (expression -> ID .)
    MIEQUAL         reduce using rule 43 (expression -> ID .)
    MTEQUAL         reduce using rule 43 (expression -> ID .)
    DIEQUAL         reduce using rule 43 (expression -> ID .)
    MOEQUAL         reduce using rule 43 (expression -> ID .)
    EQUAL           reduce using rule 43 (expression -> ID .)
    ID              reduce using rule 78 (class_name -> ID .)


state 131

    (100) for_part_1 -> expression . SEMICOLON
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    SEMICOLON       shift and go to state 156
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 132

    (29) statement -> continue ID SEMICOLON .

    return          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    ID              reduce using rule 29 (statement -> continue ID SEMICOLON .)
    break           reduce using rule 29 (statement -> continue ID SEMICOLON .)
    continue        reduce using rule 29 (statement -> continue ID SEMICOLON .)
    SEMICOLON       reduce using rule 29 (statement -> continue ID SEMICOLON .)
    public          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    REAL_NUMBER     reduce using rule 29 (statement -> continue ID SEMICOLON .)
    NUMBER          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    LPAREN          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    LBRACE          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    if              reduce using rule 29 (statement -> continue ID SEMICOLON .)
    for             reduce using rule 29 (statement -> continue ID SEMICOLON .)
    MINUS           reduce using rule 29 (statement -> continue ID SEMICOLON .)
    DBPLUS          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    DBMINUS         reduce using rule 29 (statement -> continue ID SEMICOLON .)
    boolean         reduce using rule 29 (statement -> continue ID SEMICOLON .)
    byte            reduce using rule 29 (statement -> continue ID SEMICOLON .)
    void            reduce using rule 29 (statement -> continue ID SEMICOLON .)
    char            reduce using rule 29 (statement -> continue ID SEMICOLON .)
    short           reduce using rule 29 (statement -> continue ID SEMICOLON .)
    int             reduce using rule 29 (statement -> continue ID SEMICOLON .)
    float           reduce using rule 29 (statement -> continue ID SEMICOLON .)
    long            reduce using rule 29 (statement -> continue ID SEMICOLON .)
    double          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    RBRACE          reduce using rule 29 (statement -> continue ID SEMICOLON .)
    else            reduce using rule 29 (statement -> continue ID SEMICOLON .)


state 133

    (47) expression -> expression LPAREN exp_cont . RPAREN

    RPAREN          shift and go to state 157


state 134

    (48) exp_cont -> arglist .

    RPAREN          reduce using rule 48 (exp_cont -> arglist .)


state 135

    (79) arglist -> expression . cont_arglist
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (80) cont_arglist -> . COMMA expression cont_arglist
    (81) cont_arglist -> .
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    COMMA           shift and go to state 159
    RPAREN          reduce using rule 81 (cont_arglist -> .)
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    cont_arglist                   shift and go to state 158
    operator                       shift and go to state 90

state 136

    (86) testing_expression -> expression DBEQUAL expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 86 (testing_expression -> expression DBEQUAL expression .)
    RPAREN          reduce using rule 86 (testing_expression -> expression DBEQUAL expression .)
    COMMA           reduce using rule 86 (testing_expression -> expression DBEQUAL expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! DBPLUS          [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! DBMINUS         [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! GT              [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! LT              [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! GTE             [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! LTE             [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! DBEQUAL         [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! MINUS           [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! PLUS            [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! MODULO          [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! TIMES           [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! PLEQUAL         [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! MIEQUAL         [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! MTEQUAL         [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! DIEQUAL         [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! MOEQUAL         [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 86 (testing_expression -> expression DBEQUAL expression .) ]

    operator                       shift and go to state 90

state 137

    (55) numeric_expression -> expression operator expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 55 (numeric_expression -> expression operator expression .)
    RPAREN          reduce using rule 55 (numeric_expression -> expression operator expression .)
    COMMA           reduce using rule 55 (numeric_expression -> expression operator expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! DBPLUS          [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! DBMINUS         [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! GT              [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! LT              [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! GTE             [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! LTE             [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! DBEQUAL         [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! NEQUAL          [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! MINUS           [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! PLUS            [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! DIVIDE          [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! MODULO          [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! TIMES           [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! PLEQUAL         [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! MIEQUAL         [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! MTEQUAL         [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! DIEQUAL         [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! MOEQUAL         [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]
  ! EQUAL           [ reduce using rule 55 (numeric_expression -> expression operator expression .) ]

    operator                       shift and go to state 90

state 138

    (84) testing_expression -> expression GTE expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 84 (testing_expression -> expression GTE expression .)
    RPAREN          reduce using rule 84 (testing_expression -> expression GTE expression .)
    COMMA           reduce using rule 84 (testing_expression -> expression GTE expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! DBPLUS          [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! DBMINUS         [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! GT              [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! LT              [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! GTE             [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! LTE             [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! DBEQUAL         [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! NEQUAL          [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! MINUS           [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! PLUS            [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! DIVIDE          [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! MODULO          [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! TIMES           [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! PLEQUAL         [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! MIEQUAL         [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! MTEQUAL         [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! DIEQUAL         [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! MOEQUAL         [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]
  ! EQUAL           [ reduce using rule 84 (testing_expression -> expression GTE expression .) ]

    operator                       shift and go to state 90

state 139

    (83) testing_expression -> expression LT expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 83 (testing_expression -> expression LT expression .)
    RPAREN          reduce using rule 83 (testing_expression -> expression LT expression .)
    COMMA           reduce using rule 83 (testing_expression -> expression LT expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! DBPLUS          [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! DBMINUS         [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! GT              [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! LT              [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! GTE             [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! LTE             [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! DBEQUAL         [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! NEQUAL          [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! PLUS            [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! MODULO          [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! PLEQUAL         [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! MIEQUAL         [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! MTEQUAL         [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! DIEQUAL         [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! MOEQUAL         [ reduce using rule 83 (testing_expression -> expression LT expression .) ]
  ! EQUAL           [ reduce using rule 83 (testing_expression -> expression LT expression .) ]

    operator                       shift and go to state 90

state 140

    (82) testing_expression -> expression GT expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 82 (testing_expression -> expression GT expression .)
    RPAREN          reduce using rule 82 (testing_expression -> expression GT expression .)
    COMMA           reduce using rule 82 (testing_expression -> expression GT expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! DBPLUS          [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! DBMINUS         [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! GT              [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! LT              [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! GTE             [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! LTE             [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! DBEQUAL         [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! NEQUAL          [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! PLUS            [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! MODULO          [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! PLEQUAL         [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! MIEQUAL         [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! MTEQUAL         [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! DIEQUAL         [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! MOEQUAL         [ reduce using rule 82 (testing_expression -> expression GT expression .) ]
  ! EQUAL           [ reduce using rule 82 (testing_expression -> expression GT expression .) ]

    operator                       shift and go to state 90

state 141

    (87) testing_expression -> expression NEQUAL expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 87 (testing_expression -> expression NEQUAL expression .)
    RPAREN          reduce using rule 87 (testing_expression -> expression NEQUAL expression .)
    COMMA           reduce using rule 87 (testing_expression -> expression NEQUAL expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! DBPLUS          [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! DBMINUS         [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! GT              [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! LT              [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! GTE             [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! LTE             [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! DBEQUAL         [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! NEQUAL          [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! MINUS           [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! PLUS            [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! DIVIDE          [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! MODULO          [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! TIMES           [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! PLEQUAL         [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! MIEQUAL         [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! MTEQUAL         [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! DIEQUAL         [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! MOEQUAL         [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]
  ! EQUAL           [ reduce using rule 87 (testing_expression -> expression NEQUAL expression .) ]

    operator                       shift and go to state 90

state 142

    (85) testing_expression -> expression LTE expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for DBPLUS resolved as shift
  ! shift/reduce conflict for DBMINUS resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for DBEQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLEQUAL resolved as shift
  ! shift/reduce conflict for MIEQUAL resolved as shift
  ! shift/reduce conflict for MTEQUAL resolved as shift
  ! shift/reduce conflict for DIEQUAL resolved as shift
  ! shift/reduce conflict for MOEQUAL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
    SEMICOLON       reduce using rule 85 (testing_expression -> expression LTE expression .)
    RPAREN          reduce using rule 85 (testing_expression -> expression LTE expression .)
    COMMA           reduce using rule 85 (testing_expression -> expression LTE expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

  ! LPAREN          [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! DBPLUS          [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! DBMINUS         [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! GT              [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! LT              [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! GTE             [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! LTE             [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! DBEQUAL         [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! NEQUAL          [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! MINUS           [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! PLUS            [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! DIVIDE          [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! MODULO          [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! TIMES           [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! PLEQUAL         [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! MIEQUAL         [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! MTEQUAL         [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! DIEQUAL         [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! MOEQUAL         [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]
  ! EQUAL           [ reduce using rule 85 (testing_expression -> expression LTE expression .) ]

    operator                       shift and go to state 90

state 143

    (34) cont_var_dec -> COMMA variable_declarator cont_var_dec .

    static          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    SEMICOLON       reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    public          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    boolean         reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    byte            reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    void            reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    char            reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    short           reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    int             reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    float           reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    long            reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    double          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    ID              reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    RBRACE          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    return          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    break           reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    continue        reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    REAL_NUMBER     reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    NUMBER          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    LPAREN          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    LBRACE          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    if              reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    for             reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    MINUS           reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    DBPLUS          reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    DBMINUS         reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)
    else            reduce using rule 34 (cont_var_dec -> COMMA variable_declarator cont_var_dec .)


state 144

    (36) variable_declarator -> ID LBRACKET RBRACKET cont_var_declarator .

    COMMA           reduce using rule 36 (variable_declarator -> ID LBRACKET RBRACKET cont_var_declarator .)
    SEMICOLON       reduce using rule 36 (variable_declarator -> ID LBRACKET RBRACKET cont_var_declarator .)


state 145

    (15) method_declaration -> public static void main LPAREN . String LBRACKET RBRACKET ID RPAREN statement_block

    String          shift and go to state 160


state 146

    (12) method_declaration -> public type ID LPAREN RPAREN . statement_block
    (14) method_declaration -> public type ID LPAREN RPAREN . SEMICOLON
    (16) statement_block -> . LBRACE statement statement_cont RBRACE

    SEMICOLON       shift and go to state 161
    LBRACE          shift and go to state 26

    statement_block                shift and go to state 162

state 147

    (11) method_declaration -> public type ID LPAREN parameter_list . RPAREN statement_block
    (13) method_declaration -> public type ID LPAREN parameter_list . RPAREN SEMICOLON

    RPAREN          shift and go to state 163


state 148

    (10) constructor_declaration -> public ID LPAREN RPAREN statement_block .

    static          reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    SEMICOLON       reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    public          reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    boolean         reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    byte            reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    void            reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    char            reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    short           reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    int             reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    float           reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    long            reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    double          reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    ID              reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)
    RBRACE          reduce using rule 10 (constructor_declaration -> public ID LPAREN RPAREN statement_block .)


state 149

    (91) parameter -> type ID .
    (92) parameter -> type ID . LBRACKET RBRACKET

    COMMA           reduce using rule 91 (parameter -> type ID .)
    RPAREN          reduce using rule 91 (parameter -> type ID .)
    LBRACKET        shift and go to state 164


state 150

    (88) parameter_list -> parameter cont_param .

    RPAREN          reduce using rule 88 (parameter_list -> parameter cont_param .)


state 151

    (89) cont_param -> COMMA . parameter cont_param
    (91) parameter -> . type ID
    (92) parameter -> . type ID LBRACKET RBRACKET
    (67) type -> . type_specifier
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24
    ID              shift and go to state 21

    class_name                     shift and go to state 18
    type_specifier                 shift and go to state 11
    parameter                      shift and go to state 165
    type                           shift and go to state 116

state 152

    (9) constructor_declaration -> public ID LPAREN parameter_list RPAREN . statement_block
    (16) statement_block -> . LBRACE statement statement_cont RBRACE

    LBRACE          shift and go to state 26

    statement_block                shift and go to state 166

state 153

    (93) if_statement -> if LPAREN if_part_1 RPAREN . statement action1
    (94) if_statement -> if LPAREN if_part_1 RPAREN . statement action1 else statement action2
    (19) statement -> . variable_declaration
    (20) statement -> . expression SEMICOLON
    (21) statement -> . statement_block
    (22) statement -> . if_statement
    (23) statement -> . for_statement
    (24) statement -> . return expression SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . ID COLON statement
    (27) statement -> . break ID SEMICOLON
    (28) statement -> . break SEMICOLON
    (29) statement -> . continue ID SEMICOLON
    (30) statement -> . continue SEMICOLON
    (31) statement -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (16) statement_block -> . LBRACE statement statement_cont RBRACE
    (93) if_statement -> . if LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> . if LPAREN if_part_1 RPAREN statement action1 else statement action2
    (98) for_statement -> . for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    return          shift and go to state 50
    ID              shift and go to state 53
    break           shift and go to state 51
    continue        shift and go to state 55
    SEMICOLON       shift and go to state 42
    public          shift and go to state 47
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    LBRACE          shift and go to state 26
    if              shift and go to state 40
    for             shift and go to state 54
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    class_name                     shift and go to state 18
    statement_block                shift and go to state 37
    numeric_expression             shift and go to state 38
    variable_declaration           shift and go to state 39
    type_specifier                 shift and go to state 11
    statement                      shift and go to state 167
    if_statement                   shift and go to state 46
    type                           shift and go to state 16
    testing_expression             shift and go to state 48
    for_statement                  shift and go to state 49
    expression                     shift and go to state 56

state 154

    (98) for_statement -> for LPAREN for_part_1 for_part_2 . SEMICOLON for_part_3 RPAREN statement

    SEMICOLON       shift and go to state 168


state 155

    (102) for_part_2 -> expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    SEMICOLON       reduce using rule 102 (for_part_2 -> expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 156

    (100) for_part_1 -> expression SEMICOLON .

    ID              reduce using rule 100 (for_part_1 -> expression SEMICOLON .)
    REAL_NUMBER     reduce using rule 100 (for_part_1 -> expression SEMICOLON .)
    NUMBER          reduce using rule 100 (for_part_1 -> expression SEMICOLON .)
    LPAREN          reduce using rule 100 (for_part_1 -> expression SEMICOLON .)
    MINUS           reduce using rule 100 (for_part_1 -> expression SEMICOLON .)
    DBPLUS          reduce using rule 100 (for_part_1 -> expression SEMICOLON .)
    DBMINUS         reduce using rule 100 (for_part_1 -> expression SEMICOLON .)
    SEMICOLON       reduce using rule 100 (for_part_1 -> expression SEMICOLON .)


state 157

    (47) expression -> expression LPAREN exp_cont RPAREN .

    LPAREN          reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    DBPLUS          reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    DBMINUS         reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    GT              reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    LT              reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    GTE             reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    LTE             reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    DBEQUAL         reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    NEQUAL          reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    MINUS           reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    PLUS            reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    DIVIDE          reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    MODULO          reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    TIMES           reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    PLEQUAL         reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    MIEQUAL         reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    MTEQUAL         reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    DIEQUAL         reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    MOEQUAL         reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    EQUAL           reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    RPAREN          reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    SEMICOLON       reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)
    COMMA           reduce using rule 47 (expression -> expression LPAREN exp_cont RPAREN .)


state 158

    (79) arglist -> expression cont_arglist .

    RPAREN          reduce using rule 79 (arglist -> expression cont_arglist .)


state 159

    (80) cont_arglist -> COMMA . expression cont_arglist
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    numeric_expression             shift and go to state 38
    expression                     shift and go to state 169
    testing_expression             shift and go to state 48

state 160

    (15) method_declaration -> public static void main LPAREN String . LBRACKET RBRACKET ID RPAREN statement_block

    LBRACKET        shift and go to state 170


state 161

    (14) method_declaration -> public type ID LPAREN RPAREN SEMICOLON .

    static          reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    public          reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    boolean         reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    byte            reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    void            reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    char            reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    short           reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    int             reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    float           reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    long            reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    double          reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 14 (method_declaration -> public type ID LPAREN RPAREN SEMICOLON .)


state 162

    (12) method_declaration -> public type ID LPAREN RPAREN statement_block .

    static          reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    SEMICOLON       reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    public          reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    boolean         reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    byte            reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    void            reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    char            reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    short           reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    int             reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    float           reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    long            reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    double          reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    ID              reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)
    RBRACE          reduce using rule 12 (method_declaration -> public type ID LPAREN RPAREN statement_block .)


state 163

    (11) method_declaration -> public type ID LPAREN parameter_list RPAREN . statement_block
    (13) method_declaration -> public type ID LPAREN parameter_list RPAREN . SEMICOLON
    (16) statement_block -> . LBRACE statement statement_cont RBRACE

    SEMICOLON       shift and go to state 171
    LBRACE          shift and go to state 26

    statement_block                shift and go to state 172

state 164

    (92) parameter -> type ID LBRACKET . RBRACKET

    RBRACKET        shift and go to state 173


state 165

    (89) cont_param -> COMMA parameter . cont_param
    (89) cont_param -> . COMMA parameter cont_param
    (90) cont_param -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 90 (cont_param -> .)

    cont_param                     shift and go to state 174

state 166

    (9) constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .

    static          reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    SEMICOLON       reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    public          reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    boolean         reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    byte            reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    void            reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    char            reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    short           reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    int             reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    float           reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    long            reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    double          reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    ID              reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)
    RBRACE          reduce using rule 9 (constructor_declaration -> public ID LPAREN parameter_list RPAREN statement_block .)


state 167

    (93) if_statement -> if LPAREN if_part_1 RPAREN statement . action1
    (94) if_statement -> if LPAREN if_part_1 RPAREN statement . action1 else statement action2
    (96) action1 -> .

    else            reduce using rule 96 (action1 -> .)
    return          reduce using rule 96 (action1 -> .)
    ID              reduce using rule 96 (action1 -> .)
    break           reduce using rule 96 (action1 -> .)
    continue        reduce using rule 96 (action1 -> .)
    SEMICOLON       reduce using rule 96 (action1 -> .)
    public          reduce using rule 96 (action1 -> .)
    REAL_NUMBER     reduce using rule 96 (action1 -> .)
    NUMBER          reduce using rule 96 (action1 -> .)
    LPAREN          reduce using rule 96 (action1 -> .)
    LBRACE          reduce using rule 96 (action1 -> .)
    if              reduce using rule 96 (action1 -> .)
    for             reduce using rule 96 (action1 -> .)
    MINUS           reduce using rule 96 (action1 -> .)
    DBPLUS          reduce using rule 96 (action1 -> .)
    DBMINUS         reduce using rule 96 (action1 -> .)
    boolean         reduce using rule 96 (action1 -> .)
    byte            reduce using rule 96 (action1 -> .)
    void            reduce using rule 96 (action1 -> .)
    char            reduce using rule 96 (action1 -> .)
    short           reduce using rule 96 (action1 -> .)
    int             reduce using rule 96 (action1 -> .)
    float           reduce using rule 96 (action1 -> .)
    long            reduce using rule 96 (action1 -> .)
    double          reduce using rule 96 (action1 -> .)
    RBRACE          reduce using rule 96 (action1 -> .)

    action1                        shift and go to state 175

state 168

    (98) for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON . for_part_3 RPAREN statement
    (104) for_part_3 -> . expression
    (105) for_part_3 -> .
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression

    RPAREN          reduce using rule 105 (for_part_3 -> .)
    ID              shift and go to state 70
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41

    for_part_3                     shift and go to state 176
    numeric_expression             shift and go to state 38
    expression                     shift and go to state 177
    testing_expression             shift and go to state 48

state 169

    (80) cont_arglist -> COMMA expression . cont_arglist
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (80) cont_arglist -> . COMMA expression cont_arglist
    (81) cont_arglist -> .
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    COMMA           shift and go to state 159
    RPAREN          reduce using rule 81 (cont_arglist -> .)
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    cont_arglist                   shift and go to state 178
    operator                       shift and go to state 90

state 170

    (15) method_declaration -> public static void main LPAREN String LBRACKET . RBRACKET ID RPAREN statement_block

    RBRACKET        shift and go to state 179


state 171

    (13) method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .

    static          reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    public          reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    boolean         reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    byte            reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    void            reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    char            reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    short           reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    int             reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    float           reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    long            reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    double          reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    ID              reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 13 (method_declaration -> public type ID LPAREN parameter_list RPAREN SEMICOLON .)


state 172

    (11) method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .

    static          reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    SEMICOLON       reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    public          reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    boolean         reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    byte            reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    void            reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    char            reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    short           reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    int             reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    float           reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    long            reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    double          reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    ID              reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)
    RBRACE          reduce using rule 11 (method_declaration -> public type ID LPAREN parameter_list RPAREN statement_block .)


state 173

    (92) parameter -> type ID LBRACKET RBRACKET .

    COMMA           reduce using rule 92 (parameter -> type ID LBRACKET RBRACKET .)
    RPAREN          reduce using rule 92 (parameter -> type ID LBRACKET RBRACKET .)


state 174

    (89) cont_param -> COMMA parameter cont_param .

    RPAREN          reduce using rule 89 (cont_param -> COMMA parameter cont_param .)


state 175

    (93) if_statement -> if LPAREN if_part_1 RPAREN statement action1 .
    (94) if_statement -> if LPAREN if_part_1 RPAREN statement action1 . else statement action2

  ! shift/reduce conflict for else resolved as shift
    return          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    ID              reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    break           reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    continue        reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    SEMICOLON       reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    public          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    REAL_NUMBER     reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    NUMBER          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    LPAREN          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    LBRACE          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    if              reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    for             reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    MINUS           reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    DBPLUS          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    DBMINUS         reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    boolean         reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    byte            reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    void            reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    char            reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    short           reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    int             reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    float           reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    long            reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    double          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    RBRACE          reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .)
    else            shift and go to state 180

  ! else            [ reduce using rule 93 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 .) ]


state 176

    (98) for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 . RPAREN statement

    RPAREN          shift and go to state 181


state 177

    (104) for_part_3 -> expression .
    (47) expression -> expression . LPAREN exp_cont RPAREN
    (53) numeric_expression -> expression . DBPLUS
    (54) numeric_expression -> expression . DBMINUS
    (55) numeric_expression -> expression . operator expression
    (82) testing_expression -> expression . GT expression
    (83) testing_expression -> expression . LT expression
    (84) testing_expression -> expression . GTE expression
    (85) testing_expression -> expression . LTE expression
    (86) testing_expression -> expression . DBEQUAL expression
    (87) testing_expression -> expression . NEQUAL expression
    (56) operator -> . MINUS
    (57) operator -> . PLUS
    (58) operator -> . DIVIDE
    (59) operator -> . MODULO
    (60) operator -> . TIMES
    (61) operator -> . PLEQUAL
    (62) operator -> . MIEQUAL
    (63) operator -> . MTEQUAL
    (64) operator -> . DIEQUAL
    (65) operator -> . MOEQUAL
    (66) operator -> . EQUAL

    RPAREN          reduce using rule 104 (for_part_3 -> expression .)
    LPAREN          shift and go to state 86
    DBPLUS          shift and go to state 87
    DBMINUS         shift and go to state 93
    GT              shift and go to state 98
    LT              shift and go to state 96
    GTE             shift and go to state 92
    LTE             shift and go to state 103
    DBEQUAL         shift and go to state 88
    NEQUAL          shift and go to state 101
    MINUS           shift and go to state 91
    PLUS            shift and go to state 97
    DIVIDE          shift and go to state 100
    MODULO          shift and go to state 99
    TIMES           shift and go to state 102
    PLEQUAL         shift and go to state 105
    MIEQUAL         shift and go to state 95
    MTEQUAL         shift and go to state 106
    DIEQUAL         shift and go to state 107
    MOEQUAL         shift and go to state 104
    EQUAL           shift and go to state 89

    operator                       shift and go to state 90

state 178

    (80) cont_arglist -> COMMA expression cont_arglist .

    RPAREN          reduce using rule 80 (cont_arglist -> COMMA expression cont_arglist .)


state 179

    (15) method_declaration -> public static void main LPAREN String LBRACKET RBRACKET . ID RPAREN statement_block

    ID              shift and go to state 182


state 180

    (94) if_statement -> if LPAREN if_part_1 RPAREN statement action1 else . statement action2
    (19) statement -> . variable_declaration
    (20) statement -> . expression SEMICOLON
    (21) statement -> . statement_block
    (22) statement -> . if_statement
    (23) statement -> . for_statement
    (24) statement -> . return expression SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . ID COLON statement
    (27) statement -> . break ID SEMICOLON
    (28) statement -> . break SEMICOLON
    (29) statement -> . continue ID SEMICOLON
    (30) statement -> . continue SEMICOLON
    (31) statement -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (16) statement_block -> . LBRACE statement statement_cont RBRACE
    (93) if_statement -> . if LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> . if LPAREN if_part_1 RPAREN statement action1 else statement action2
    (98) for_statement -> . for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    return          shift and go to state 50
    ID              shift and go to state 53
    break           shift and go to state 51
    continue        shift and go to state 55
    SEMICOLON       shift and go to state 42
    public          shift and go to state 47
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    LBRACE          shift and go to state 26
    if              shift and go to state 40
    for             shift and go to state 54
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    class_name                     shift and go to state 18
    statement_block                shift and go to state 37
    numeric_expression             shift and go to state 38
    variable_declaration           shift and go to state 39
    type_specifier                 shift and go to state 11
    statement                      shift and go to state 183
    if_statement                   shift and go to state 46
    type                           shift and go to state 16
    testing_expression             shift and go to state 48
    for_statement                  shift and go to state 49
    expression                     shift and go to state 56

state 181

    (98) for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN . statement
    (19) statement -> . variable_declaration
    (20) statement -> . expression SEMICOLON
    (21) statement -> . statement_block
    (22) statement -> . if_statement
    (23) statement -> . for_statement
    (24) statement -> . return expression SEMICOLON
    (25) statement -> . return SEMICOLON
    (26) statement -> . ID COLON statement
    (27) statement -> . break ID SEMICOLON
    (28) statement -> . break SEMICOLON
    (29) statement -> . continue ID SEMICOLON
    (30) statement -> . continue SEMICOLON
    (31) statement -> . SEMICOLON
    (32) variable_declaration -> . public type variable_declarator cont_var_dec
    (33) variable_declaration -> . type variable_declarator cont_var_dec
    (41) expression -> . numeric_expression
    (42) expression -> . testing_expression
    (43) expression -> . ID
    (44) expression -> . REAL_NUMBER
    (45) expression -> . NUMBER
    (46) expression -> . LPAREN expression RPAREN
    (47) expression -> . expression LPAREN exp_cont RPAREN
    (16) statement_block -> . LBRACE statement statement_cont RBRACE
    (93) if_statement -> . if LPAREN if_part_1 RPAREN statement action1
    (94) if_statement -> . if LPAREN if_part_1 RPAREN statement action1 else statement action2
    (98) for_statement -> . for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement
    (67) type -> . type_specifier
    (50) numeric_expression -> . MINUS expression
    (51) numeric_expression -> . DBPLUS expression
    (52) numeric_expression -> . DBMINUS expression
    (53) numeric_expression -> . expression DBPLUS
    (54) numeric_expression -> . expression DBMINUS
    (55) numeric_expression -> . expression operator expression
    (82) testing_expression -> . expression GT expression
    (83) testing_expression -> . expression LT expression
    (84) testing_expression -> . expression GTE expression
    (85) testing_expression -> . expression LTE expression
    (86) testing_expression -> . expression DBEQUAL expression
    (87) testing_expression -> . expression NEQUAL expression
    (68) type_specifier -> . boolean
    (69) type_specifier -> . byte
    (70) type_specifier -> . void
    (71) type_specifier -> . char
    (72) type_specifier -> . short
    (73) type_specifier -> . int
    (74) type_specifier -> . float
    (75) type_specifier -> . long
    (76) type_specifier -> . double
    (77) type_specifier -> . class_name
    (78) class_name -> . ID

    return          shift and go to state 50
    ID              shift and go to state 53
    break           shift and go to state 51
    continue        shift and go to state 55
    SEMICOLON       shift and go to state 42
    public          shift and go to state 47
    REAL_NUMBER     shift and go to state 45
    NUMBER          shift and go to state 36
    LPAREN          shift and go to state 52
    LBRACE          shift and go to state 26
    if              shift and go to state 40
    for             shift and go to state 54
    MINUS           shift and go to state 43
    DBPLUS          shift and go to state 35
    DBMINUS         shift and go to state 41
    boolean         shift and go to state 8
    byte            shift and go to state 23
    void            shift and go to state 19
    char            shift and go to state 22
    short           shift and go to state 20
    int             shift and go to state 6
    float           shift and go to state 7
    long            shift and go to state 15
    double          shift and go to state 24

    class_name                     shift and go to state 18
    statement_block                shift and go to state 37
    numeric_expression             shift and go to state 38
    variable_declaration           shift and go to state 39
    type_specifier                 shift and go to state 11
    statement                      shift and go to state 184
    if_statement                   shift and go to state 46
    type                           shift and go to state 16
    testing_expression             shift and go to state 48
    for_statement                  shift and go to state 49
    expression                     shift and go to state 56

state 182

    (15) method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID . RPAREN statement_block

    RPAREN          shift and go to state 185


state 183

    (94) if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement . action2
    (97) action2 -> .

    return          reduce using rule 97 (action2 -> .)
    ID              reduce using rule 97 (action2 -> .)
    break           reduce using rule 97 (action2 -> .)
    continue        reduce using rule 97 (action2 -> .)
    SEMICOLON       reduce using rule 97 (action2 -> .)
    public          reduce using rule 97 (action2 -> .)
    REAL_NUMBER     reduce using rule 97 (action2 -> .)
    NUMBER          reduce using rule 97 (action2 -> .)
    LPAREN          reduce using rule 97 (action2 -> .)
    LBRACE          reduce using rule 97 (action2 -> .)
    if              reduce using rule 97 (action2 -> .)
    for             reduce using rule 97 (action2 -> .)
    MINUS           reduce using rule 97 (action2 -> .)
    DBPLUS          reduce using rule 97 (action2 -> .)
    DBMINUS         reduce using rule 97 (action2 -> .)
    boolean         reduce using rule 97 (action2 -> .)
    byte            reduce using rule 97 (action2 -> .)
    void            reduce using rule 97 (action2 -> .)
    char            reduce using rule 97 (action2 -> .)
    short           reduce using rule 97 (action2 -> .)
    int             reduce using rule 97 (action2 -> .)
    float           reduce using rule 97 (action2 -> .)
    long            reduce using rule 97 (action2 -> .)
    double          reduce using rule 97 (action2 -> .)
    RBRACE          reduce using rule 97 (action2 -> .)
    else            reduce using rule 97 (action2 -> .)

    action2                        shift and go to state 186

state 184

    (98) for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .

    return          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    ID              reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    break           reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    continue        reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    SEMICOLON       reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    public          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    REAL_NUMBER     reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    NUMBER          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    LPAREN          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    LBRACE          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    if              reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    for             reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    MINUS           reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    DBPLUS          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    DBMINUS         reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    boolean         reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    byte            reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    void            reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    char            reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    short           reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    int             reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    float           reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    long            reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    double          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    RBRACE          reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)
    else            reduce using rule 98 (for_statement -> for LPAREN for_part_1 for_part_2 SEMICOLON for_part_3 RPAREN statement .)


state 185

    (15) method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN . statement_block
    (16) statement_block -> . LBRACE statement statement_cont RBRACE

    LBRACE          shift and go to state 26

    statement_block                shift and go to state 187

state 186

    (94) if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .

    return          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    ID              reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    break           reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    continue        reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    SEMICOLON       reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    public          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    REAL_NUMBER     reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    NUMBER          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    LPAREN          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    LBRACE          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    if              reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    for             reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    MINUS           reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    DBPLUS          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    DBMINUS         reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    boolean         reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    byte            reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    void            reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    char            reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    short           reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    int             reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    float           reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    long            reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    double          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    RBRACE          reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)
    else            reduce using rule 94 (if_statement -> if LPAREN if_part_1 RPAREN statement action1 else statement action2 .)


state 187

    (15) method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .

    static          reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    SEMICOLON       reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    public          reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    boolean         reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    byte            reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    void            reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    char            reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    short           reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    int             reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    float           reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    long            reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    double          reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    ID              reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)
    RBRACE          reduce using rule 15 (method_declaration -> public static void main LPAREN String LBRACKET RBRACKET ID RPAREN statement_block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 69 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for GT in state 69 resolved as shift
WARNING: shift/reduce conflict for LT in state 69 resolved as shift
WARNING: shift/reduce conflict for GTE in state 69 resolved as shift
WARNING: shift/reduce conflict for LTE in state 69 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 69 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 69 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 69 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 69 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 69 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 69 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 72 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for GT in state 72 resolved as shift
WARNING: shift/reduce conflict for LT in state 72 resolved as shift
WARNING: shift/reduce conflict for GTE in state 72 resolved as shift
WARNING: shift/reduce conflict for LTE in state 72 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 72 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 72 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 72 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 72 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 73 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for GT in state 73 resolved as shift
WARNING: shift/reduce conflict for LT in state 73 resolved as shift
WARNING: shift/reduce conflict for GTE in state 73 resolved as shift
WARNING: shift/reduce conflict for LTE in state 73 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 73 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 73 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 73 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 73 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 136 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for GT in state 136 resolved as shift
WARNING: shift/reduce conflict for LT in state 136 resolved as shift
WARNING: shift/reduce conflict for GTE in state 136 resolved as shift
WARNING: shift/reduce conflict for LTE in state 136 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 136 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 136 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 136 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 137 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for GT in state 137 resolved as shift
WARNING: shift/reduce conflict for LT in state 137 resolved as shift
WARNING: shift/reduce conflict for GTE in state 137 resolved as shift
WARNING: shift/reduce conflict for LTE in state 137 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 137 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 137 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 137 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 137 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 137 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 138 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for GT in state 138 resolved as shift
WARNING: shift/reduce conflict for LT in state 138 resolved as shift
WARNING: shift/reduce conflict for GTE in state 138 resolved as shift
WARNING: shift/reduce conflict for LTE in state 138 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 138 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 138 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 138 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 138 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 138 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 139 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 139 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for GT in state 139 resolved as shift
WARNING: shift/reduce conflict for LT in state 139 resolved as shift
WARNING: shift/reduce conflict for GTE in state 139 resolved as shift
WARNING: shift/reduce conflict for LTE in state 139 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 139 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 139 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 139 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 139 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 139 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 140 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for GT in state 140 resolved as shift
WARNING: shift/reduce conflict for LT in state 140 resolved as shift
WARNING: shift/reduce conflict for GTE in state 140 resolved as shift
WARNING: shift/reduce conflict for LTE in state 140 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 140 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 140 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 140 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 140 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 141 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for GT in state 141 resolved as shift
WARNING: shift/reduce conflict for LT in state 141 resolved as shift
WARNING: shift/reduce conflict for GTE in state 141 resolved as shift
WARNING: shift/reduce conflict for LTE in state 141 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 141 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 141 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 141 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 141 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 142 resolved as shift
WARNING: shift/reduce conflict for DBPLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for DBMINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for GT in state 142 resolved as shift
WARNING: shift/reduce conflict for LT in state 142 resolved as shift
WARNING: shift/reduce conflict for GTE in state 142 resolved as shift
WARNING: shift/reduce conflict for LTE in state 142 resolved as shift
WARNING: shift/reduce conflict for DBEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 142 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 142 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 142 resolved as shift
WARNING: shift/reduce conflict for PLEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for MIEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for MTEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for DIEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for MOEQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 142 resolved as shift
WARNING: shift/reduce conflict for else in state 175 resolved as shift
